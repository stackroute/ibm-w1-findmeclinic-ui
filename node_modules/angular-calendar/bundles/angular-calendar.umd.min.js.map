{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://angular-calendar/modules/common/util.ts","ng://angular-calendar/modules/common/calendar-event-actions.component.ts","ng://angular-calendar/modules/common/calendar-event-title.component.ts","ng://angular-calendar/modules/common/calendar-tooltip.directive.ts","ng://angular-calendar/date-adapters/date-adapter.ts","ng://angular-calendar/modules/common/calendar-view.enum.ts","ng://angular-calendar/modules/common/calendar-previous-view.directive.ts","ng://angular-calendar/modules/common/calendar-next-view.directive.ts","ng://angular-calendar/modules/common/calendar-today.directive.ts","ng://angular-calendar/modules/common/calendar-angular-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-date.pipe.ts","ng://angular-calendar/modules/common/calendar-event-title-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-event-title.pipe.ts","ng://angular-calendar/modules/common/click.directive.ts","ng://angular-calendar/modules/common/calendar-utils.provider.ts","ng://angular-calendar/modules/common/calendar-moment-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-native-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-event-times-changed-event.interface.ts","ng://angular-calendar/modules/common/calendar-common.module.ts","ng://angular-calendar/modules/month/calendar-month-view.component.ts","ng://angular-calendar/modules/month/calendar-month-view-header.component.ts","ng://angular-calendar/modules/month/calendar-month-cell.component.ts","ng://angular-calendar/modules/month/calendar-open-day-events.component.ts","ng://angular-calendar/modules/month/calendar-month.module.ts","ng://angular-calendar/modules/common/calendar-drag-helper.provider.ts","ng://angular-calendar/modules/common/calendar-resize-helper.provider.ts","ng://angular-calendar/modules/week/calendar-week-view.component.ts","ng://angular-calendar/modules/week/calendar-week-view-header.component.ts","ng://angular-calendar/modules/week/calendar-week-view-event.component.ts","ng://angular-calendar/modules/week/calendar-week-view-hour-segment.component.ts","ng://angular-calendar/modules/week/calendar-week.module.ts","ng://angular-calendar/modules/day/calendar-day-view.component.ts","ng://angular-calendar/modules/day/calendar-day-view-hour-segment.component.ts","ng://angular-calendar/modules/day/calendar-day-view-event.component.ts","ng://angular-calendar/modules/day/calendar-day.module.ts","ng://angular-calendar/modules/calendar.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","validateEvents","events","validateEventsWithoutLog","args","_i","console","warn","isInside","outer","inner","Math","ceil","left","right","top","bottom","roundToNearest","amount","precision","round","trackByEventId","index","event","id","trackByWeekDayHeaderDate","day","date","toISOString","trackByIndex","trackByHourSegment","segment","trackByHour","hour","segments","trackByDayOrWeekEvent","weekEvent","getMinutesMoved","movedY","hourSegments","hourSegmentHeight","eventSnapSize","getMinimumEventHeightInMinutes","getDefaultEventEnd","dateAdapter","minimumMinutes","end","addMinutes","start","addDaysWithExclusions","days","excluded","daysCounter","daysToAdd","changeDays","subDays","addDays","result","abs","getDay","indexOf","isDraggedWithinPeriod","newStart","newEnd","period","shouldFireDroppedEvent","dropEvent","allDay","calendarId","dropData","getWeekViewPeriod","viewDate","weekStartsOn","daysInWeek","viewStart","startOfDay","startOfWeek","viewEnd","endOfDay","endOfWeek","CalendarEventActionsComponent","Component","selector","template","Input","CalendarEventTitleComponent","CalendarTooltipWindowComponent","CalendarTooltipDirective","elementRef","injector","renderer","componentFactoryResolver","viewContainerRef","document","placement","tooltipFactory","resolveComponentFactory","ngOnDestroy","hide","onMouseOver","show","onMouseOut","_this","tooltipRef","contents","createComponent","instance","customTemplate","appendToBody","body","appendChild","location","nativeElement","requestAnimationFrame","positionTooltip","remove","hostView","previousPosition","changeDetectorRef","detectChanges","positionElements","children","Directive","ElementRef","Injector","Renderer2","ComponentFactoryResolver","ViewContainerRef","Inject","DOCUMENT","HostListener","DateAdapter","Month","Week","Day","CalendarPreviousViewDirective","excludeDays","viewDateChange","EventEmitter","onClick","subFn","week","subWeeks","month","subMonths","view","CalendarView","emit","Output","CalendarNextViewDirective","addFn","addWeeks","addMonths","CalendarTodayDirective","Date","CalendarAngularDateFormatter","monthViewColumnHeader","_a","locale","DatePipe","transform","monthViewDayNumber","monthViewTitle","weekViewColumnHeader","weekViewColumnSubHeader","weekViewTitle","_b","format","dateToFormat","showYear","getUTCFullYear","weekViewHour","dayViewHour","dayViewTitle","Injectable","CalendarDateFormatter","_super","__extends","__","constructor","create","tslib_1.__extends","CalendarDatePipe","dateFormatter","method","Pipe","name","LOCALE_ID","CalendarEventTitleFormatter","title","monthTooltip","weekTooltip","dayTooltip","CalendarEventTitlePipe","calendarEventTitle","titleType","clickElements","Set","ClickDirective","elm","click","ngOnInit","add","eventName","window","removeListener","listen","nearestClickableParent","target","has","parentElement","delete","CalendarUtils","getMonthView","getWeekViewHeader","getWeekView","getDayView","getDayViewHourGrid","MOMENT","InjectionToken","CalendarMomentDateFormatter","moment","CalendarNativeDateFormatter","Intl","DateTimeFormat","weekday","year","undefined","Drag","Drop","Resize","CalendarCommonModule","forRoot","config","ngModule","providers","eventTitleFormatter","utils","NgModule","declarations","imports","CommonModule","exports","entryComponents","CalendarMonthViewComponent","cdr","activeDayIsOpen","tooltipPlacement","tooltipAppendToBody","beforeViewRender","dayClicked","eventClicked","eventTimesChanged","trackByDate","refresh","refreshSubscription","subscribe","refreshAll","markForCheck","ngOnChanges","changes","weekendDays","refreshHeader","refreshBody","checkActiveDayIsOpen","unsubscribe","toggleDayHighlight","isHighlighted","forEach","backgroundColor","color","secondary","eventDropped","getYear","getMonth","getDate","setDate","setMonth","setYear","secondsDiff","differenceInSeconds","addSeconds","type","CalendarEventTimesChangedEventType","columnHeaders","emitBeforeViewRender","openDay","find","isSameDay","openRowIndex","floor","totalDaysVisibleInWeek","header","ChangeDetectorRef","CalendarMonthViewHeaderComponent","CalendarMonthCellComponent","highlightDay","unhighlightDay","host","class","[class.cal-past]","[class.cal-today]","[class.cal-future]","[class.cal-weekend]","[class.cal-in-month]","[class.cal-out-month]","[class.cal-has-events]","[class.cal-open]","[class.cal-event-highlight]","[style.backgroundColor]","collapseAnimation","trigger","transition","style","height","overflow","animate","CalendarOpenDayEventsComponent","isOpen","animations","CalendarMonthModule","DragAndDropModule","CalendarDragHelper","dragContainerElement","draggableElement","startPosition","getBoundingClientRect","validateDrag","x","y","snapDraggedEvents","isWithinThreshold","newRect","CalendarResizeHelper","resizeContainerElement","minWidth","validateResize","rectangle","width","CalendarWeekViewComponent","dayStartHour","dayStartMinute","dayEndHour","dayEndMinute","dayHeaderClicked","hourSegmentClicked","allDayEventResizes","Map","timeEventResizes","eventDragEnter","dragActive","trackByHourColumn","column","hours","resizeStarted","eventsContainer","dayColumnWidth","getDayColumnWidth","resizeHelper","timeEventResizeStarted","timeEvent","resizeEvent","set","timeEventResizing","adjustedEvents","tempEvents","lastResizeEvent","newEventDates","getTimeEventResizedDates","adjustedEvent","eventIndex","restoreOriginalEvents","timeEventResizeEnded","get","allDayEventResizeStarted","allDayEventsContainer","allDayEvent","originalOffset","offset","originalSpan","span","edge","edges","allDayEventResizing","dayWidth","currentResize","diff","allDayEventResizeEnded","daysDiff","allDayEventResizingBeforeStart","eventRowContainer","offsetWidth","dragStarted","dayEvent","dragHelper","size","hourColumns","linkedEvent","columnEvent","dragMove","dragEvent","newEventTimes","getDragMovedEventTimes","originalEvent_1","adjustedEvent_1","map","dragEnded","dragEndEvent","useY","absolutePositionedEvents","dayStart","minute","dayEnd","segmentHeight","daysDragged","minutesMoved","adjustedEventsArray","filter","originalEvent","existingColumnEvent","startsBeforeDay","endsAfterDay","clear","calendarEvent","minimumEventHeight","eventWithoutEnd","__rest","getOwnPropertySymbols","smallestResizes","CalendarWeekViewHeaderComponent","CalendarWeekViewEventComponent","CalendarWeekViewHourSegmentComponent","CalendarWeekModule","ResizableModule","CalendarDayViewComponent","eventWidth","currentResizes","trackByDayEvent","refreshHourGrid","refreshView","dayEventsContainer","originalTop","originalHeight","resizing","resizeEnded","pixelsMoved","resizingBeforeStart","differenceInMinutes","hourGrid","allDayEvents","CalendarDayViewHourSegmentComponent","CalendarDayViewEventComponent","CalendarDayModule","CalendarModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  CalendarEvent,\n  DayViewEvent,\n  DayViewHour,\n  DayViewHourSegment,\n  validateEvents as validateEventsWithoutLog,\n  ViewPeriod,\n  WeekDay,\n  WeekViewAllDayEvent\n} from 'calendar-utils';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\nexport const validateEvents = (events: CalendarEvent[]) => {\n  const warn = (...args) => console.warn('angular-calendar', ...args);\n  return validateEventsWithoutLog(events, warn);\n};\n\nexport function isInside(outer: ClientRect, inner: ClientRect): boolean {\n  return (\n    Math.ceil(outer.left) <= Math.ceil(inner.left) &&\n    Math.ceil(inner.left) <= Math.ceil(outer.right) &&\n    Math.ceil(outer.left) <= Math.ceil(inner.right) &&\n    Math.ceil(inner.right) <= Math.ceil(outer.right) &&\n    Math.ceil(outer.top) <= Math.ceil(inner.top) &&\n    Math.ceil(inner.top) <= Math.ceil(outer.bottom) &&\n    Math.ceil(outer.top) <= Math.ceil(inner.bottom) &&\n    Math.ceil(inner.bottom) <= Math.ceil(outer.bottom)\n  );\n}\n\nexport function roundToNearest(amount: number, precision: number) {\n  return Math.round(amount / precision) * precision;\n}\n\nexport const trackByEventId = (index: number, event: CalendarEvent) =>\n  event.id ? event.id : event;\n\nexport const trackByWeekDayHeaderDate = (index: number, day: WeekDay) =>\n  day.date.toISOString();\n\nexport const trackByIndex = (index: number) => index;\n\nexport const trackByHourSegment = (\n  index: number,\n  segment: DayViewHourSegment\n) => segment.date.toISOString();\n\nexport const trackByHour = (index: number, hour: DayViewHour) =>\n  hour.segments[0].date.toISOString();\n\nexport const trackByDayOrWeekEvent = (\n  index: number,\n  weekEvent: WeekViewAllDayEvent | DayViewEvent\n) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\n\nconst MINUTES_IN_HOUR = 60;\n\nexport function getMinutesMoved(\n  movedY: number,\n  hourSegments: number,\n  hourSegmentHeight: number,\n  eventSnapSize: number\n): number {\n  const draggedInPixelsSnapSize = roundToNearest(\n    movedY,\n    eventSnapSize || hourSegmentHeight\n  );\n  const pixelAmountInMinutes =\n    MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight);\n  return draggedInPixelsSnapSize * pixelAmountInMinutes;\n}\n\nexport function getMinimumEventHeightInMinutes(\n  hourSegments: number,\n  hourSegmentHeight: number\n) {\n  return (MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight)) * 30;\n}\n\nexport function getDefaultEventEnd(\n  dateAdapter: DateAdapter,\n  event: CalendarEvent,\n  minimumMinutes: number\n): Date {\n  if (event.end) {\n    return event.end;\n  } else {\n    return dateAdapter.addMinutes(event.start, minimumMinutes);\n  }\n}\n\nexport function addDaysWithExclusions(\n  dateAdapter: DateAdapter,\n  date: Date,\n  days: number,\n  excluded: number[]\n): Date {\n  let daysCounter = 0;\n  let daysToAdd = 0;\n  const changeDays = days < 0 ? dateAdapter.subDays : dateAdapter.addDays;\n  let result = date;\n  while (daysToAdd <= Math.abs(days)) {\n    result = changeDays(date, daysCounter);\n    const day = dateAdapter.getDay(result);\n    if (excluded.indexOf(day) === -1) {\n      daysToAdd++;\n    }\n    daysCounter++;\n  }\n  return result;\n}\n\nexport function isDraggedWithinPeriod(\n  newStart: Date,\n  newEnd: Date,\n  period: ViewPeriod\n): boolean {\n  const end = newEnd || newStart;\n  return (\n    (period.start <= newStart && newStart <= period.end) ||\n    (period.start <= end && end <= period.end)\n  );\n}\n\nexport function shouldFireDroppedEvent(\n  dropEvent: { dropData?: { event?: CalendarEvent; calendarId?: symbol } },\n  date: Date,\n  allDay: boolean,\n  calendarId: symbol\n) {\n  return (\n    dropEvent.dropData &&\n    dropEvent.dropData.event &&\n    (dropEvent.dropData.calendarId !== calendarId ||\n      (dropEvent.dropData.event.allDay && !allDay) ||\n      (!dropEvent.dropData.event.allDay && allDay))\n  );\n}\n\nexport function getWeekViewPeriod(\n  dateAdapter: DateAdapter,\n  viewDate: Date,\n  weekStartsOn: number,\n  excluded: number[] = [],\n  daysInWeek?: number\n): { viewStart: Date; viewEnd: Date } {\n  let viewStart = daysInWeek\n    ? dateAdapter.startOfDay(viewDate)\n    : dateAdapter.startOfWeek(viewDate, { weekStartsOn });\n  if (excluded.indexOf(dateAdapter.getDay(viewStart)) > -1) {\n    viewStart = dateAdapter.subDays(\n      addDaysWithExclusions(dateAdapter, viewStart, 1, excluded),\n      1\n    );\n  }\n  if (daysInWeek) {\n    const viewEnd = dateAdapter.endOfDay(\n      addDaysWithExclusions(dateAdapter, viewStart, daysInWeek - 1, excluded)\n    );\n    return { viewStart, viewEnd };\n  } else {\n    let viewEnd = dateAdapter.endOfWeek(viewDate, { weekStartsOn });\n    if (excluded.indexOf(dateAdapter.getDay(viewEnd)) > -1) {\n      viewEnd = dateAdapter.addDays(\n        addDaysWithExclusions(dateAdapter, viewEnd, -1, excluded),\n        1\n      );\n    }\n    return { viewStart, viewEnd };\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { trackByIndex } from './util';\n\n@Component({\n  selector: 'mwl-calendar-event-actions',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-event=\"event\">\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\n        <a\n          class=\"cal-event-action\"\n          href=\"javascript:;\"\n          *ngFor=\"let action of event.actions; trackBy:trackByIndex\"\n          (mwlClick)=\"action.onClick({event: event})\"\n          [ngClass]=\"action.cssClass\"\n          [innerHtml]=\"action.label\">\n        </a>\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarEventActionsComponent {\n  @Input()\n  event: CalendarEvent;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  trackByIndex = trackByIndex;\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-event-title',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-event=\"event\"\n      let-view=\"view\">\n      <span\n        class=\"cal-event-title\"\n        [innerHTML]=\"event.title | calendarEventTitle:view:event\">\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        view: view\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarEventTitleComponent {\n  @Input()\n  event: CalendarEvent;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  @Input()\n  view: string;\n}\n","import {\n  Directive,\n  Component,\n  HostListener,\n  OnDestroy,\n  Input,\n  ComponentRef,\n  Injector,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ElementRef,\n  ComponentFactory,\n  Inject,\n  Renderer2,\n  TemplateRef\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { PlacementArray, positionElements } from 'positioning';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-tooltip-window',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-contents=\"contents\"\n      let-placement=\"placement\"\n      let-event=\"event\">\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\n        <div class=\"cal-tooltip-arrow\"></div>\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        contents: contents,\n        placement: placement,\n        event: event\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarTooltipWindowComponent {\n  @Input()\n  contents: string;\n\n  @Input()\n  placement: string;\n\n  @Input()\n  event: CalendarEvent;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n}\n\n@Directive({\n  selector: '[mwlCalendarTooltip]'\n})\nexport class CalendarTooltipDirective implements OnDestroy {\n  @Input('mwlCalendarTooltip')\n  contents: string; // tslint:disable-line no-input-rename\n\n  @Input('tooltipPlacement')\n  placement: PlacementArray = 'auto'; // tslint:disable-line no-input-rename\n\n  @Input('tooltipTemplate')\n  customTemplate: TemplateRef<any>; // tslint:disable-line no-input-rename\n\n  @Input('tooltipEvent')\n  event: CalendarEvent; // tslint:disable-line no-input-rename\n\n  @Input('tooltipAppendToBody')\n  appendToBody: boolean; // tslint:disable-line no-input-rename\n\n  private tooltipFactory: ComponentFactory<CalendarTooltipWindowComponent>;\n  private tooltipRef: ComponentRef<CalendarTooltipWindowComponent>;\n\n  constructor(\n    private elementRef: ElementRef,\n    private injector: Injector,\n    private renderer: Renderer2,\n    componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    @Inject(DOCUMENT) private document //tslint:disable-line\n  ) {\n    this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(\n      CalendarTooltipWindowComponent\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.hide();\n  }\n\n  @HostListener('mouseenter')\n  onMouseOver(): void {\n    this.show();\n  }\n\n  @HostListener('mouseleave')\n  onMouseOut(): void {\n    this.hide();\n  }\n\n  private show(): void {\n    if (!this.tooltipRef && this.contents) {\n      this.tooltipRef = this.viewContainerRef.createComponent(\n        this.tooltipFactory,\n        0,\n        this.injector,\n        []\n      );\n      this.tooltipRef.instance.contents = this.contents;\n      this.tooltipRef.instance.customTemplate = this.customTemplate;\n      this.tooltipRef.instance.event = this.event;\n      if (this.appendToBody) {\n        this.document.body.appendChild(this.tooltipRef.location.nativeElement);\n      }\n      requestAnimationFrame(() => {\n        this.positionTooltip();\n      });\n    }\n  }\n\n  private hide(): void {\n    if (this.tooltipRef) {\n      this.viewContainerRef.remove(\n        this.viewContainerRef.indexOf(this.tooltipRef.hostView)\n      );\n      this.tooltipRef = null;\n    }\n  }\n\n  private positionTooltip(previousPosition?: string): void {\n    if (this.tooltipRef) {\n      this.tooltipRef.changeDetectorRef.detectChanges();\n      this.tooltipRef.instance.placement = positionElements(\n        this.elementRef.nativeElement,\n        this.tooltipRef.location.nativeElement.children[0],\n        this.placement,\n        this.appendToBody\n      );\n      // keep re-positioning the tooltip until the arrow position doesn't make a difference\n      if (previousPosition !== this.tooltipRef.instance.placement) {\n        this.positionTooltip(this.tooltipRef.instance.placement);\n      }\n    }\n  }\n}\n","import { DateAdapter as BaseDateAdapter } from 'calendar-utils/date-adapters/date-adapter';\n\nexport abstract class DateAdapter implements BaseDateAdapter {\n  abstract addWeeks(date: Date | string | number, amount: number): Date;\n\n  abstract addMonths(date: Date | string | number, amount: number): Date;\n\n  abstract subDays(date: Date | string | number, amount: number): Date;\n\n  abstract subWeeks(date: Date | string | number, amount: number): Date;\n\n  abstract subMonths(date: Date | string | number, amount: number): Date;\n\n  abstract getISOWeek(date: Date | string | number): number;\n\n  abstract setDate(date: Date | string | number, dayOfMonth: number): Date;\n\n  abstract setMonth(date: Date | string | number, month: number): Date;\n\n  abstract setYear(date: Date | string | number, year: number): Date;\n\n  abstract getDate(date: Date | string | number): number;\n\n  abstract getMonth(date: Date | string | number): number;\n\n  abstract getYear(date: Date | string | number): number;\n\n  abstract addDays(date: Date | string | number, amount: number): Date;\n\n  abstract addHours(date: Date | string | number, amount: number): Date;\n\n  abstract addMinutes(date: Date | string | number, amount: number): Date;\n\n  abstract addSeconds(date: Date | string | number, amount: number): Date;\n\n  abstract differenceInDays(\n    dateLeft: Date | string | number,\n    dateRight: Date | string | number\n  ): number;\n\n  abstract differenceInMinutes(\n    dateLeft: Date | string | number,\n    dateRight: Date | string | number\n  ): number;\n\n  abstract differenceInSeconds(\n    dateLeft: Date | string | number,\n    dateRight: Date | string | number\n  ): number;\n\n  abstract endOfDay(date: Date | string | number): Date;\n\n  abstract endOfMonth(date: Date | string | number): Date;\n\n  abstract endOfWeek(\n    date: Date | string | number,\n    options?: { weekStartsOn?: number }\n  ): Date;\n\n  abstract getDay(date: Date | string | number): number;\n\n  abstract isSameDay(\n    dateLeft: Date | string | number,\n    dateRight: Date | string | number\n  ): boolean;\n\n  abstract isSameMonth(\n    dateLeft: Date | string | number,\n    dateRight: Date | string | number\n  ): boolean;\n\n  abstract isSameSecond(\n    dateLeft: Date | string | number,\n    dateRight: Date | string | number\n  ): boolean;\n\n  abstract max(...dates: Array<Date | string | number>): Date;\n\n  abstract setHours(date: Date | string | number, hours: number): Date;\n\n  abstract setMinutes(date: Date | string | number, minutes: number): Date;\n\n  abstract startOfDay(date: Date | string | number): Date;\n\n  abstract startOfMinute(date: Date | string | number): Date;\n\n  abstract startOfMonth(date: Date | string | number): Date;\n\n  abstract startOfWeek(\n    date: Date | string | number,\n    options?: { weekStartsOn?: number }\n  ): Date;\n\n  abstract getHours(date: Date | string | number): number;\n\n  abstract getMinutes(date: Date | string | number): number;\n}\n","export enum CalendarView {\n  Month = 'month',\n  Week = 'week',\n  Day = 'day'\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { CalendarView } from './calendar-view.enum';\nimport { addDaysWithExclusions } from './util';\n\n/**\n * Change the view date to the previous view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarPreviousView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Previous\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarPreviousView]'\n})\nexport class CalendarPreviousViewDirective {\n  /**\n   * The current view\n   */\n  @Input()\n  view: CalendarView;\n\n  /**\n   * The current view date\n   */\n  @Input()\n  viewDate: Date;\n\n  /**\n   * Days to skip when going back by 1 day\n   */\n  @Input()\n  excludeDays: number[] = [];\n\n  /**\n   * The number of days in a week. If set will subtract this amount of days instead of 1 week\n   */\n  @Input()\n  daysInWeek: number;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output()\n  viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    const subFn: any = {\n      day: this.dateAdapter.subDays,\n      week: this.dateAdapter.subWeeks,\n      month: this.dateAdapter.subMonths\n    }[this.view];\n\n    if (this.view === CalendarView.Day) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          -1,\n          this.excludeDays\n        )\n      );\n    } else if (this.view === CalendarView.Week && this.daysInWeek) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          -this.daysInWeek,\n          this.excludeDays\n        )\n      );\n    } else {\n      this.viewDateChange.emit(subFn(this.viewDate, 1));\n    }\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output\n} from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { CalendarView } from './calendar-view.enum';\nimport { addDaysWithExclusions } from './util';\n\n/**\n * Change the view date to the next view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarNextView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Next\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarNextView]'\n})\nexport class CalendarNextViewDirective {\n  /**\n   * The current view\n   */\n  @Input()\n  view: CalendarView;\n\n  /**\n   * The current view date\n   */\n  @Input()\n  viewDate: Date;\n\n  /**\n   * Days to skip when going forward by 1 day\n   */\n  @Input()\n  excludeDays: number[] = [];\n\n  /**\n   * The number of days in a week. If set will add this amount of days instead of 1 week\n   */\n  @Input()\n  daysInWeek: number;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output()\n  viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    const addFn: any = {\n      day: this.dateAdapter.addDays,\n      week: this.dateAdapter.addWeeks,\n      month: this.dateAdapter.addMonths\n    }[this.view];\n\n    if (this.view === CalendarView.Day) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          1,\n          this.excludeDays\n        )\n      );\n    } else if (this.view === CalendarView.Week && this.daysInWeek) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          this.daysInWeek,\n          this.excludeDays\n        )\n      );\n    } else {\n      this.viewDateChange.emit(addFn(this.viewDate, 1));\n    }\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\n/**\n * Change the view date to the current day. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarToday\n *  [(viewDate)]=\"viewDate\">\n *  Today\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarToday]'\n})\nexport class CalendarTodayDirective {\n  /**\n   * The current view date\n   */\n  @Input()\n  viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output()\n  viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    this.viewDateChange.emit(this.dateAdapter.startOfDay(new Date()));\n  }\n}\n","import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport { DatePipe } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { getWeekViewPeriod } from './util';\n\n/**\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\n */\n@Injectable()\nexport class CalendarAngularDateFormatter\n  implements CalendarDateFormatterInterface {\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'EEEE', null, locale);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'd', null, locale);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'MMMM y', null, locale);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'EEEE', null, locale);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'MMM d', null, locale);\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({\n    date,\n    locale,\n    weekStartsOn,\n    excludeDays,\n    daysInWeek\n  }: DateFormatterParams): string {\n    const { viewStart, viewEnd } = getWeekViewPeriod(\n      this.dateAdapter,\n      date,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek\n    );\n    const format = (dateToFormat: Date, showYear: boolean) =>\n      new DatePipe(locale).transform(\n        dateToFormat,\n        'MMM d' + (showYear ? ', yyyy' : ''),\n        null,\n        locale\n      );\n    return `${format(\n      viewStart,\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\n    )} - ${format(viewEnd, true)}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the week view\n   */\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'h a', null, locale);\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'h a', null, locale);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(\n      date,\n      'EEEE, MMMM d, y',\n      null,\n      locale\n    );\n  }\n}\n","import { CalendarAngularDateFormatter } from './calendar-angular-date-formatter.provider';\nimport { Injectable } from '@angular/core';\n\n/**\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\n *\n * If you wish, you may override any of the defaults via angulars DI. For example:\n *\n * ```typescript\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\n * import { DatePipe } from '@angular/common';\n *\n * class CustomDateFormatter extends CalendarDateFormatter {\n *\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\n *     return new DatePipe(locale).transform(date, 'EEE', locale); // use short week days\n *   }\n *\n * }\n *\n * // in your component that uses the calendar\n * providers: [{\n *   provide: CalendarDateFormatter,\n *   useClass: CustomDateFormatter\n * }]\n * ```\n */\n@Injectable()\nexport class CalendarDateFormatter extends CalendarAngularDateFormatter {}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\n\n/**\n * This pipe is primarily for rendering the current view title. Example usage:\n * ```typescript\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\n * ```\n */\n@Pipe({\n  name: 'calendarDate'\n})\nexport class CalendarDatePipe implements PipeTransform {\n  constructor(\n    private dateFormatter: CalendarDateFormatter,\n    @Inject(LOCALE_ID) private locale: string\n  ) {}\n\n  transform(\n    date: Date,\n    method: string,\n    locale: string = this.locale,\n    weekStartsOn: number = 0,\n    excludeDays: number[] = [],\n    daysInWeek?: number\n  ): string {\n    return this.dateFormatter[method]({\n      date,\n      locale,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek\n    });\n  }\n}\n","import { CalendarEvent } from 'calendar-utils';\n\n/**\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\n *\n * ```typescript\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\n *\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\n *\n *   month(event: CalendarEvent): string {\n *     return `Custom prefix: ${event.title}`;\n *   }\n *\n * }\n *\n * // in your component\n * providers: [{\n *  provide: CalendarEventTitleFormatter,\n *  useClass: CustomEventTitleFormatter\n * }]\n * ```\n */\nexport class CalendarEventTitleFormatter {\n  /**\n   * The month view event title.\n   */\n  month(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The month view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  monthTooltip(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event title.\n   */\n  week(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  weekTooltip(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event title.\n   */\n  day(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  dayTooltip(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\n\n@Pipe({\n  name: 'calendarEventTitle'\n})\nexport class CalendarEventTitlePipe implements PipeTransform {\n  constructor(private calendarEventTitle: CalendarEventTitleFormatter) {}\n\n  transform(title: string, titleType: string, event: CalendarEvent): string {\n    return this.calendarEventTitle[titleType](event, title);\n  }\n}\n","import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Inject\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nconst clickElements = new Set<HTMLElement>();\n\n@Directive({\n  selector: '[mwlClick]'\n})\nexport class ClickDirective implements OnInit, OnDestroy {\n  @Output('mwlClick')\n  click: EventEmitter<MouseEvent> = new EventEmitter(); // tslint:disable-line\n\n  private removeListener: () => void;\n\n  constructor(\n    private renderer: Renderer2,\n    private elm: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) private document\n  ) {}\n\n  ngOnInit(): void {\n    clickElements.add(this.elm.nativeElement);\n    const eventName: string =\n      typeof window !== 'undefined' && typeof window['Hammer'] !== 'undefined'\n        ? 'tap'\n        : 'click';\n    this.removeListener = this.renderer.listen(\n      this.elm.nativeElement,\n      eventName,\n      event => {\n        // prevent child click events from firing on parent elements that also have click events\n        let nearestClickableParent: HTMLElement = event.target;\n        while (\n          !clickElements.has(nearestClickableParent) &&\n          nearestClickableParent !== this.document.body\n        ) {\n          nearestClickableParent = nearestClickableParent.parentElement;\n        }\n        const isThisClickableElement =\n          this.elm.nativeElement === nearestClickableParent;\n        if (isThisClickableElement) {\n          this.click.next(event);\n        }\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.removeListener();\n    clickElements.delete(this.elm.nativeElement);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  GetMonthViewArgs,\n  MonthView,\n  GetWeekViewHeaderArgs,\n  WeekDay,\n  GetWeekViewArgs,\n  GetDayViewArgs,\n  DayView,\n  GetDayViewHourGridArgs,\n  DayViewHour,\n  WeekView,\n  getDayView,\n  getDayViewHourGrid,\n  getMonthView,\n  getWeekViewHeader,\n  getWeekView\n} from 'calendar-utils';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\n@Injectable()\nexport class CalendarUtils {\n  constructor(private dateAdapter: DateAdapter) {}\n\n  getMonthView(args: GetMonthViewArgs): MonthView {\n    return getMonthView(this.dateAdapter, args);\n  }\n\n  getWeekViewHeader(args: GetWeekViewHeaderArgs): WeekDay[] {\n    return getWeekViewHeader(this.dateAdapter, args);\n  }\n\n  getWeekView(args: GetWeekViewArgs): WeekView {\n    return getWeekView(this.dateAdapter, args);\n  }\n\n  getDayView(args: GetDayViewArgs): DayView {\n    return getDayView(this.dateAdapter, args);\n  }\n\n  getDayViewHourGrid(args: GetDayViewHourGridArgs): DayViewHour[] {\n    return getDayViewHourGrid(this.dateAdapter, args);\n  }\n}\n","import { InjectionToken, Inject } from '@angular/core';\nimport {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport { getWeekViewPeriod } from './util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\nexport const MOMENT: InjectionToken<string> = new InjectionToken('Moment');\n\n/**\n * This will use <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a> to do all date formatting. To use this class:\n *\n * ```typescript\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\n * import moment from 'moment';\n *\n * // in your component\n * provide: [{\n *   provide: MOMENT, useValue: moment\n * }, {\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\n * }]\n *\n * ```\n */\nexport class CalendarMomentDateFormatter\n  implements CalendarDateFormatterInterface {\n  /**\n   * @hidden\n   */\n  constructor(\n    @Inject(MOMENT) private moment: any,\n    private dateAdapter: DateAdapter\n  ) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd');\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('D');\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('MMMM YYYY');\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd');\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('MMM D');\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({\n    date,\n    locale,\n    weekStartsOn,\n    excludeDays,\n    daysInWeek\n  }: DateFormatterParams): string {\n    const { viewStart, viewEnd } = getWeekViewPeriod(\n      this.dateAdapter,\n      date,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek\n    );\n    const format = (dateToFormat: Date, showYear: boolean) =>\n      this.moment(dateToFormat)\n        .locale(locale)\n        .format('MMM D' + (showYear ? ', YYYY' : ''));\n    return `${format(\n      viewStart,\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\n    )} - ${format(viewEnd, true)}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the week view\n   */\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('ha');\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('ha');\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd, D MMMM, YYYY');\n  }\n}\n","import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport { Injectable } from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { getWeekViewPeriod } from './util';\n\n/**\n * This will use <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to do all date formatting.\n *\n * You will need to include a <a href=\"https://github.com/andyearnshaw/Intl.js/\">polyfill</a> for older browsers.\n */\n@Injectable()\nexport class CalendarNativeDateFormatter\n  implements CalendarDateFormatterInterface {\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(date);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'long'\n    }).format(date);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'short'\n    }).format(date);\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({\n    date,\n    locale,\n    weekStartsOn,\n    excludeDays,\n    daysInWeek\n  }: DateFormatterParams): string {\n    const { viewStart, viewEnd } = getWeekViewPeriod(\n      this.dateAdapter,\n      date,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek\n    );\n\n    const format = (dateToFormat: Date, showYear: boolean) =>\n      new Intl.DateTimeFormat(locale, {\n        day: 'numeric',\n        month: 'short',\n        year: showYear ? 'numeric' : undefined\n      }).format(dateToFormat);\n\n    return `${format(\n      viewStart,\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\n    )} - ${format(viewEnd, true)}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the week view\n   */\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      weekday: 'long'\n    }).format(date);\n  }\n}\n","import { CalendarEvent } from 'calendar-utils';\n\nexport enum CalendarEventTimesChangedEventType {\n  Drag = 'drag',\n  Drop = 'drop',\n  Resize = 'resize'\n}\n\n/**\n * The output `$event` type when an event is resized or dragged and dropped.\n */\nexport interface CalendarEventTimesChangedEvent<MetaType = any> {\n  type: CalendarEventTimesChangedEventType;\n  event: CalendarEvent<MetaType>;\n  newStart: Date;\n  newEnd?: Date;\n  allDay?: boolean;\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CalendarEventActionsComponent } from './calendar-event-actions.component';\nimport { CalendarEventTitleComponent } from './calendar-event-title.component';\nimport {\n  CalendarTooltipDirective,\n  CalendarTooltipWindowComponent\n} from './calendar-tooltip.directive';\nimport { CalendarPreviousViewDirective } from './calendar-previous-view.directive';\nimport { CalendarNextViewDirective } from './calendar-next-view.directive';\nimport { CalendarTodayDirective } from './calendar-today.directive';\nimport { CalendarDatePipe } from './calendar-date.pipe';\nimport { CalendarEventTitlePipe } from './calendar-event-title.pipe';\nimport { ClickDirective } from './click.directive';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\nimport { CalendarUtils } from './calendar-utils.provider';\n\nexport interface CalendarModuleConfig {\n  eventTitleFormatter?: Provider;\n  dateFormatter?: Provider;\n  utils?: Provider;\n}\n\nexport * from './calendar-event-title-formatter.provider';\nexport * from './calendar-moment-date-formatter.provider';\nexport * from './calendar-native-date-formatter.provider';\nexport * from './calendar-angular-date-formatter.provider';\nexport * from './calendar-date-formatter.provider';\nexport * from './calendar-utils.provider';\nexport * from './calendar-date-formatter.interface';\nexport * from './calendar-event-times-changed-event.interface';\nexport * from '../../date-adapters/date-adapter';\nexport * from './calendar-view.enum';\n\nexport {\n  CalendarEvent,\n  EventAction as CalendarEventAction,\n  DAYS_OF_WEEK,\n  ViewPeriod as CalendarViewPeriod\n} from 'calendar-utils';\n\n/**\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\n *\n * ```typescript\n * import { CalendarCommonModule, CalendarMonthModule } from 'angular-calendar';\n *\n * @NgModule({\n *   imports: [\n *     CalendarCommonModule.forRoot(),\n *     CalendarMonthModule\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  declarations: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    ClickDirective\n  ],\n  imports: [CommonModule],\n  exports: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    ClickDirective\n  ],\n  entryComponents: [CalendarTooltipWindowComponent]\n})\nexport class CalendarCommonModule {\n  static forRoot(\n    dateAdapter: Provider,\n    config: CalendarModuleConfig = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: CalendarCommonModule,\n      providers: [\n        dateAdapter,\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\n        config.dateFormatter || CalendarDateFormatter,\n        config.utils || CalendarUtils\n      ]\n    };\n  }\n}\n","import {\n  Component,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  WeekDay,\n  MonthView,\n  MonthViewDay,\n  ViewPeriod\n} from 'calendar-utils';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  CalendarEventTimesChangedEvent,\n  CalendarEventTimesChangedEventType\n} from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { validateEvents, trackByIndex } from '../common/util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { PlacementArray } from 'positioning';\n\nexport interface CalendarMonthViewBeforeRenderEvent {\n  header: WeekDay[];\n  body: MonthViewDay[];\n  period: ViewPeriod;\n}\n\nexport interface CalendarMonthViewEventTimesChangedEvent<\n  EventMetaType = any,\n  DayMetaType = any\n> extends CalendarEventTimesChangedEvent<EventMetaType> {\n  day: MonthViewDay<DayMetaType>;\n}\n\n/**\n * Shows all events on a given month. Example usage:\n *\n * ```typescript\n * <mwl-calendar-month-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-month-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-month-view',\n  template: `\n    <div class=\"cal-month-view\">\n      <mwl-calendar-month-view-header\n        [days]=\"columnHeaders\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\">\n      </mwl-calendar-month-view-header>\n      <div class=\"cal-days\">\n        <div *ngFor=\"let rowIndex of view.rowOffsets; trackByIndex\">\n          <div class=\"cal-cell-row\">\n            <mwl-calendar-month-cell\n              *ngFor=\"let day of (view.days | slice : rowIndex : rowIndex + (view.totalDaysVisibleInWeek)); trackBy:trackByDate\"\n              [ngClass]=\"day?.cssClass\"\n              [day]=\"day\"\n              [openDay]=\"openDay\"\n              [locale]=\"locale\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [customTemplate]=\"cellTemplate\"\n              (mwlClick)=\"dayClicked.emit({ day: day })\"\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\n              mwlDroppable\n              dragOverClass=\"cal-drag-over\"\n              (drop)=\"eventDropped(day, $event.dropData.event)\"\n              (eventClicked)=\"eventClicked.emit({event: $event.event})\">\n            </mwl-calendar-month-cell>\n          </div>\n          <mwl-calendar-open-day-events\n            [isOpen]=\"openRowIndex === rowIndex\"\n            [events]=\"openDay?.events\"\n            [customTemplate]=\"openDayEventsTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            [eventActionsTemplate]=\"eventActionsTemplate\"\n            (eventClicked)=\"eventClicked.emit({event: $event.event})\"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            (drop)=\"eventDropped(openDay, $event.dropData.event)\">\n          </mwl-calendar-open-day-events>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarMonthViewComponent\n  implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input()\n  viewDate: Date;\n\n  /**\n   * An array of events to display on view.\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input()\n  events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input()\n  excludeDays: number[] = [];\n\n  /**\n   * Whether the events list for the day of the `viewDate` option is visible or not\n   */\n  @Input()\n  activeDayIsOpen: boolean = false;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input()\n  refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input()\n  locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input()\n  tooltipPlacement: PlacementArray = 'auto';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input()\n  tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input()\n  tooltipAppendToBody: boolean = true;\n\n  /**\n   * The start number of the week\n   */\n  @Input()\n  weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input()\n  headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use to replace the day cell\n   */\n  @Input()\n  cellTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for the slide down box of events for the active day\n   */\n  @Input()\n  openDayEventsTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input()\n  eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event actions\n   */\n  @Input()\n  eventActionsTemplate: TemplateRef<any>;\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input()\n  weekendDays: number[];\n\n  /**\n   * An output that will be called before the view is rendered for the current month.\n   * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarMonthViewBeforeRenderEvent>();\n\n  /**\n   * Called when the day cell is clicked\n   */\n  @Output()\n  dayClicked = new EventEmitter<{\n    day: MonthViewDay;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an event is dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<\n    CalendarMonthViewEventTimesChangedEvent\n  >();\n\n  /**\n   * @hidden\n   */\n  columnHeaders: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: MonthView;\n\n  /**\n   * @hidden\n   */\n  openRowIndex: number;\n\n  /**\n   * @hidden\n   */\n  openDay: MonthViewDay;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  trackByIndex = trackByIndex;\n\n  /**\n   * @hidden\n   */\n  trackByDate = (index: number, day: MonthViewDay) => day.date.toISOString();\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string,\n    private dateAdapter: DateAdapter\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (changes.viewDate || changes.excludeDays || changes.weekendDays) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays ||\n      changes.weekendDays\n    ) {\n      this.refreshBody();\n    }\n\n    if (\n      changes.activeDayIsOpen ||\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays\n    ) {\n      this.checkActiveDayIsOpen();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  toggleDayHighlight(event: CalendarEvent, isHighlighted: boolean): void {\n    this.view.days.forEach(day => {\n      if (isHighlighted && day.events.indexOf(event) > -1) {\n        day.backgroundColor =\n          (event.color && event.color.secondary) || '#D1E8FF';\n      } else {\n        delete day.backgroundColor;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  eventDropped(day: MonthViewDay, event: CalendarEvent): void {\n    const year: number = this.dateAdapter.getYear(day.date);\n    const month: number = this.dateAdapter.getMonth(day.date);\n    const date: number = this.dateAdapter.getDate(day.date);\n    const newStart: Date = this.dateAdapter.setDate(\n      this.dateAdapter.setMonth(\n        this.dateAdapter.setYear(event.start, year),\n        month\n      ),\n      date\n    );\n    let newEnd: Date;\n    if (event.end) {\n      const secondsDiff: number = this.dateAdapter.differenceInSeconds(\n        newStart,\n        event.start\n      );\n      newEnd = this.dateAdapter.addSeconds(event.end, secondsDiff);\n    }\n    this.eventTimesChanged.emit({\n      event,\n      newStart,\n      newEnd,\n      day,\n      type: CalendarEventTimesChangedEventType.Drop\n    });\n  }\n\n  private refreshHeader(): void {\n    this.columnHeaders = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshBody(): void {\n    this.view = this.utils.getMonthView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private checkActiveDayIsOpen(): void {\n    if (this.activeDayIsOpen === true) {\n      this.openDay = this.view.days.find(day =>\n        this.dateAdapter.isSameDay(day.date, this.viewDate)\n      );\n      const index: number = this.view.days.indexOf(this.openDay);\n      this.openRowIndex =\n        Math.floor(index / this.view.totalDaysVisibleInWeek) *\n        this.view.totalDaysVisibleInWeek;\n    } else {\n      this.openRowIndex = null;\n      this.openDay = null;\n    }\n  }\n\n  private refreshAll(): void {\n    this.columnHeaders = null;\n    this.view = null;\n    this.refreshHeader();\n    this.refreshBody();\n    this.checkActiveDayIsOpen();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.columnHeaders && this.view) {\n      this.beforeViewRender.emit({\n        header: this.columnHeaders,\n        body: this.view.days,\n        period: this.view.period\n      });\n    }\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-month-view-header',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\">\n      <div class=\"cal-cell-row cal-header\">\n        <div\n          class=\"cal-cell\"\n          *ngFor=\"let day of days; trackBy:trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [ngClass]=\"day.cssClass\">\n          {{ day.date | calendarDate:'monthViewColumnHeader':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{days: days, locale: locale}\">\n    </ng-template>\n  `\n})\nexport class CalendarMonthViewHeaderComponent {\n  @Input()\n  days: WeekDay[];\n\n  @Input()\n  locale: string;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { MonthViewDay, CalendarEvent } from 'calendar-utils';\nimport { trackByEventId } from '../common/util';\nimport { PlacementArray } from 'positioning';\n\n@Component({\n  selector: 'mwl-calendar-month-cell',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-day=\"day\"\n      let-openDay=\"openDay\"\n      let-locale=\"locale\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-highlightDay=\"highlightDay\"\n      let-unhighlightDay=\"unhighlightDay\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\">\n      <div class=\"cal-cell-top\">\n        <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{ day.badgeTotal }}</span>\n        <span class=\"cal-day-number\">{{ day.date | calendarDate:'monthViewDayNumber':locale }}</span>\n      </div>\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\n        <div\n          class=\"cal-event\"\n          *ngFor=\"let event of day.events; trackBy:trackByEventId\"\n          [style.backgroundColor]=\"event.color?.primary\"\n          [ngClass]=\"event?.cssClass\"\n          (mouseenter)=\"highlightDay.emit({event: event})\"\n          (mouseleave)=\"unhighlightDay.emit({event: event})\"\n          [mwlCalendarTooltip]=\"event.title | calendarEventTitle:'monthTooltip':event\"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          [tooltipEvent]=\"event\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\n          mwlDraggable\n          [class.cal-draggable]=\"event.draggable\"\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{event: event}\"\n          [dragAxis]=\"{x: event.draggable, y: event.draggable}\"\n          (mwlClick)=\"eventClicked.emit({ event: event })\">\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        day: day,\n        openDay: openDay,\n        locale: locale,\n        tooltipPlacement: tooltipPlacement,\n        highlightDay: highlightDay,\n        unhighlightDay: unhighlightDay,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\">\n    </ng-template>\n  `,\n  host: {\n    class: 'cal-cell cal-day-cell',\n    '[class.cal-past]': 'day.isPast',\n    '[class.cal-today]': 'day.isToday',\n    '[class.cal-future]': 'day.isFuture',\n    '[class.cal-weekend]': 'day.isWeekend',\n    '[class.cal-in-month]': 'day.inMonth',\n    '[class.cal-out-month]': '!day.inMonth',\n    '[class.cal-has-events]': 'day.events.length > 0',\n    '[class.cal-open]': 'day === openDay',\n    '[class.cal-event-highlight]': '!!day.backgroundColor',\n    '[style.backgroundColor]': 'day.backgroundColor'\n  }\n})\nexport class CalendarMonthCellComponent {\n  @Input()\n  day: MonthViewDay;\n\n  @Input()\n  openDay: MonthViewDay;\n\n  @Input()\n  locale: string;\n\n  @Input()\n  tooltipPlacement: PlacementArray;\n\n  @Input()\n  tooltipAppendToBody: boolean;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  @Input()\n  tooltipTemplate: TemplateRef<any>;\n\n  @Output()\n  highlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  unhighlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata\n} from '@angular/animations';\nimport { CalendarEvent } from 'calendar-utils';\nimport { trackByEventId } from '../common/util';\n\nexport const collapseAnimation: AnimationTriggerMetadata = trigger('collapse', [\n  transition('void => *', [\n    style({ height: 0, overflow: 'hidden' }),\n    animate('150ms', style({ height: '*' }))\n  ]),\n  transition('* => void', [\n    style({ height: '*', overflow: 'hidden' }),\n    animate('150ms', style({ height: 0 }))\n  ])\n]);\n\n@Component({\n  selector: 'mwl-calendar-open-day-events',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-events=\"events\"\n      let-eventClicked=\"eventClicked\"\n      let-isOpen=\"isOpen\">\n      <div class=\"cal-open-day-events\" [@collapse] *ngIf=\"isOpen\">\n        <div\n          *ngFor=\"let event of events; trackBy:trackByEventId\"\n          [ngClass]=\"event?.cssClass\"\n          mwlDraggable\n          [class.cal-draggable]=\"event.draggable\"\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{event: event}\"\n          [dragAxis]=\"{x: event.draggable, y: event.draggable}\">\n          <span\n            class=\"cal-event\"\n            [style.backgroundColor]=\"event.color?.primary\">\n          </span>\n          &ngsp;\n          <mwl-calendar-event-title\n            [event]=\"event\"\n            [customTemplate]=\"eventTitleTemplate\"\n            view=\"month\"\n            (mwlClick)=\"eventClicked.emit({event: event})\">\n          </mwl-calendar-event-title>\n          &ngsp;\n          <mwl-calendar-event-actions\n            [event]=\"event\"\n            [customTemplate]=\"eventActionsTemplate\">\n          </mwl-calendar-event-actions>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        events: events,\n        eventClicked: eventClicked,\n        isOpen: isOpen\n      }\">\n    </ng-template>\n  `,\n  animations: [collapseAnimation]\n})\nexport class CalendarOpenDayEventsComponent {\n  @Input()\n  isOpen: boolean = false;\n\n  @Input()\n  events: CalendarEvent[];\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  @Input()\n  eventTitleTemplate: TemplateRef<any>;\n\n  @Input()\n  eventActionsTemplate: TemplateRef<any>;\n\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarMonthViewComponent } from './calendar-month-view.component';\nimport { CalendarMonthViewHeaderComponent } from './calendar-month-view-header.component';\nimport { CalendarMonthCellComponent } from './calendar-month-cell.component';\nimport { CalendarOpenDayEventsComponent } from './calendar-open-day-events.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarMonthViewComponent,\n  CalendarMonthViewBeforeRenderEvent,\n  CalendarMonthViewEventTimesChangedEvent\n} from './calendar-month-view.component';\nexport { MonthViewDay as CalendarMonthViewDay } from 'calendar-utils';\nexport { collapseAnimation } from './calendar-open-day-events.component';\n\n@NgModule({\n  imports: [CommonModule, DragAndDropModule, CalendarCommonModule],\n  declarations: [\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent\n  ],\n  exports: [\n    DragAndDropModule,\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent\n  ]\n})\nexport class CalendarMonthModule {}\n","import { isInside } from './util';\n\nconst DRAG_THRESHOLD = 1;\n\nexport class CalendarDragHelper {\n  private readonly startPosition: ClientRect;\n\n  constructor(\n    private dragContainerElement: HTMLElement,\n    draggableElement: HTMLElement\n  ) {\n    this.startPosition = draggableElement.getBoundingClientRect();\n  }\n\n  validateDrag({\n    x,\n    y,\n    snapDraggedEvents\n  }: {\n    x: number;\n    y: number;\n    snapDraggedEvents: boolean;\n  }): boolean {\n    const isWithinThreshold =\n      Math.abs(x) > DRAG_THRESHOLD || Math.abs(y) > DRAG_THRESHOLD;\n\n    if (snapDraggedEvents) {\n      const newRect: ClientRect = Object.assign({}, this.startPosition, {\n        left: this.startPosition.left + x,\n        right: this.startPosition.right + x,\n        top: this.startPosition.top + y,\n        bottom: this.startPosition.bottom + y\n      });\n\n      return (\n        isWithinThreshold &&\n        isInside(this.dragContainerElement.getBoundingClientRect(), newRect)\n      );\n    } else {\n      return isWithinThreshold;\n    }\n  }\n}\n","import { isInside } from './util';\n\nexport class CalendarResizeHelper {\n  constructor(\n    private resizeContainerElement: HTMLElement,\n    private minWidth?: number\n  ) {}\n\n  validateResize({ rectangle }: { rectangle: ClientRect }): boolean {\n    if (\n      this.minWidth &&\n      Math.ceil(rectangle.width) < Math.ceil(this.minWidth)\n    ) {\n      return false;\n    }\n\n    return isInside(\n      this.resizeContainerElement.getBoundingClientRect(),\n      rectangle\n    );\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnChanges,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  WeekDay,\n  CalendarEvent,\n  WeekViewAllDayEvent,\n  WeekView,\n  ViewPeriod,\n  WeekViewHourColumn,\n  DayViewEvent,\n  DayViewHourSegment,\n  DayViewHour\n} from 'calendar-utils';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport { CalendarDragHelper } from '../common/calendar-drag-helper.provider';\nimport { CalendarResizeHelper } from '../common/calendar-resize-helper.provider';\nimport {\n  CalendarEventTimesChangedEvent,\n  CalendarEventTimesChangedEventType\n} from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport {\n  validateEvents,\n  trackByIndex,\n  roundToNearest,\n  trackByWeekDayHeaderDate,\n  trackByHourSegment,\n  trackByHour,\n  getMinutesMoved,\n  getDefaultEventEnd,\n  getMinimumEventHeightInMinutes,\n  addDaysWithExclusions,\n  trackByDayOrWeekEvent,\n  isDraggedWithinPeriod,\n  shouldFireDroppedEvent,\n  getWeekViewPeriod\n} from '../common/util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport {\n  DragEndEvent,\n  DropEvent,\n  DragMoveEvent\n} from 'angular-draggable-droppable';\nimport { PlacementArray } from 'positioning';\n\nexport interface WeekViewAllDayEventResize {\n  originalOffset: number;\n  originalSpan: number;\n  edge: string;\n}\n\nexport interface CalendarWeekViewBeforeRenderEvent extends WeekView {\n  header: WeekDay[];\n}\n\n/**\n * Shows all events on a given week. Example usage:\n *\n * ```typescript\n * <mwl-calendar-week-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-week-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-week-view',\n  template: `\n    <div class=\"cal-week-view\">\n      <mwl-calendar-week-view-header\n        [days]=\"days\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\n        (eventDropped)=\"eventDropped({dropData: $event}, $event.newStart, true)\">\n      </mwl-calendar-week-view-header>\n      <div\n        class=\"cal-all-day-events\"\n        #allDayEventsContainer\n        *ngIf=\"view.allDayEventRows.length > 0\"\n        mwlDroppable\n        (dragEnter)=\"eventDragEnter = eventDragEnter + 1\"\n        (dragLeave)=\"eventDragEnter = eventDragEnter - 1\">\n        <div class=\"cal-day-columns\">\n          <div\n            class=\"cal-time-label-column\"\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\">\n          </div>\n          <div\n            class=\"cal-day-column\"\n            *ngFor=\"let day of days; trackBy:trackByWeekDayHeaderDate\"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            (drop)=\"eventDropped($event, day.date, true)\">\n          </div>\n        </div>\n        <div\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy:trackByIndex\"\n          #eventRowContainer\n          class=\"cal-events-row\">\n          <div\n            *ngFor=\"let allDayEvent of eventRow.row; trackBy:trackByDayOrWeekEvent\"\n            #event\n            class=\"cal-event-container\"\n            [class.cal-draggable]=\"allDayEvent.event.draggable && allDayEventResizes.size === 0\"\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\n            [ngClass]=\"allDayEvent.event?.cssClass\"\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\n            [style.marginLeft.%]=\"(100 / days.length) * allDayEvent.offset\"\n            mwlResizable\n            [resizeSnapGrid]=\"{left: dayColumnWidth, right: dayColumnWidth}\"\n            [validateResize]=\"validateResize\"\n            (resizeStart)=\"allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\"\n            (resizing)=\"allDayEventResizing(allDayEvent, $event, dayColumnWidth)\"\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\n            mwlDraggable\n            dragActiveClass=\"cal-drag-active\"\n            [dropData]=\"{event: allDayEvent.event, calendarId: calendarId}\"\n            [dragAxis]=\"{\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\n              y: !snapDraggedEvents && allDayEvent.event.draggable && allDayEventResizes.size === 0\n            }\"\n            [dragSnapGrid]=\"snapDraggedEvents ? {x: dayColumnWidth} : {}\"\n            [validateDrag]=\"validateDrag\"\n            (dragPointerDown)=\"dragStarted(eventRowContainer, event)\"\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\">\n            <div\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\n              *ngIf=\"allDayEvent.event?.resizable?.beforeStart && !allDayEvent.startsBeforeWeek\"\n              mwlResizeHandle\n              [resizeEdges]=\"{ left: true }\">\n            </div>\n            <mwl-calendar-week-view-event\n              [weekEvent]=\"allDayEvent\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [customTemplate]=\"eventTemplate\"\n              [eventTitleTemplate]=\"eventTitleTemplate\"\n              [eventActionsTemplate]=\"eventActionsTemplate\"\n              (eventClicked)=\"eventClicked.emit({event: allDayEvent.event})\">\n            </mwl-calendar-week-view-event>\n            <div\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\n              *ngIf=\"allDayEvent.event?.resizable?.afterEnd && !allDayEvent.endsAfterWeek\"\n              mwlResizeHandle\n              [resizeEdges]=\"{ right: true }\">\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"cal-time-events\"\n        mwlDroppable\n        (dragEnter)=\"eventDragEnter = eventDragEnter + 1\"\n        (dragLeave)=\"eventDragEnter = eventDragEnter - 1\">\n        <div class=\"cal-time-label-column\" *ngIf=\"view.hourColumns.length > 0\">\n          <div\n            *ngFor=\"let hour of view.hourColumns[0].hours; trackBy:trackByHour; let odd = odd\"\n            class=\"cal-hour\"\n            [class.cal-hour-odd]=\"odd\">\n            <mwl-calendar-week-view-hour-segment\n              *ngFor=\"let segment of hour.segments; trackBy:trackByHourSegment\"\n              [style.height.px]=\"hourSegmentHeight\"\n              [segment]=\"segment\"\n              [segmentHeight]=\"hourSegmentHeight\"\n              [locale]=\"locale\"\n              [customTemplate]=\"hourSegmentTemplate\"\n              [isTimeLabel]=\"true\">\n            </mwl-calendar-week-view-hour-segment>\n          </div>\n        </div>\n        <div\n          class=\"cal-day-columns\"\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\n          #dayColumns>\n          <div\n            class=\"cal-day-column\"\n            *ngFor=\"let column of view.hourColumns; trackBy:trackByHourColumn\">\n            <div\n              *ngFor=\"let timeEvent of column.events; trackBy:trackByDayOrWeekEvent\"\n              #event\n              class=\"cal-event-container\"\n              [class.cal-draggable]=\"timeEvent.event.draggable && timeEventResizes.size === 0\"\n              [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\n              [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\n              [ngClass]=\"timeEvent.event.cssClass\"\n              [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\n              [style.top.px]=\"timeEvent.top\"\n              [style.height.px]=\"timeEvent.height\"\n              [style.left.%]=\"timeEvent.left\"\n              [style.width.%]=\"timeEvent.width\"\n              mwlResizable\n              [resizeSnapGrid]=\"{left: dayColumnWidth, right: dayColumnWidth, top: eventSnapSize || hourSegmentHeight, bottom: eventSnapSize || hourSegmentHeight}\"\n              [validateResize]=\"validateResize\"\n              [allowNegativeResizes]=\"true\"\n              (resizeStart)=\"timeEventResizeStarted(dayColumns, timeEvent, $event)\"\n              (resizing)=\"timeEventResizing(timeEvent, $event)\"\n              (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\n              mwlDraggable\n              dragActiveClass=\"cal-drag-active\"\n              [dropData]=\"{event: timeEvent.event, calendarId: calendarId}\"\n              [dragAxis]=\"{\n                x: timeEvent.event.draggable && timeEventResizes.size === 0,\n                y: timeEvent.event.draggable && timeEventResizes.size === 0\n              }\"\n              [dragSnapGrid]=\"snapDraggedEvents ? {x: dayColumnWidth, y: eventSnapSize || hourSegmentHeight} : {}\"\n              [ghostDragEnabled]=\"!snapDraggedEvents\"\n              [validateDrag]=\"validateDrag\"\n              (dragPointerDown)=\"dragStarted(dayColumns, event, timeEvent)\"\n              (dragging)=\"dragMove(timeEvent, $event)\"\n              (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\">\n              <div\n                class=\"cal-resize-handle cal-resize-handle-before-start\"\n                *ngIf=\"timeEvent.event?.resizable?.beforeStart && !timeEvent.startsBeforeDay\"\n                mwlResizeHandle\n                [resizeEdges]=\"{\n                  left: true,\n                  top: true\n                }\">\n              </div>\n              <mwl-calendar-week-view-event\n                [weekEvent]=\"timeEvent\"\n                [tooltipPlacement]=\"tooltipPlacement\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                [tooltipAppendToBody]=\"tooltipAppendToBody\"\n                [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\n                [customTemplate]=\"eventTemplate\"\n                [eventTitleTemplate]=\"eventTitleTemplate\"\n                [eventActionsTemplate]=\"eventActionsTemplate\"\n                (eventClicked)=\"eventClicked.emit({event: timeEvent.event})\">\n              </mwl-calendar-week-view-event>\n              <div\n                class=\"cal-resize-handle cal-resize-handle-after-end\"\n                *ngIf=\"timeEvent.event?.resizable?.afterEnd && !timeEvent.endsAfterDay\"\n                mwlResizeHandle\n                [resizeEdges]=\"{\n                  right: true,\n                  bottom: true\n                }\">\n              </div>\n            </div>\n\n            <div\n              *ngFor=\"let hour of column.hours; trackBy:trackByHour; let odd = odd\"\n              class=\"cal-hour\"\n              [class.cal-hour-odd]=\"odd\">\n              <mwl-calendar-week-view-hour-segment\n                *ngFor=\"let segment of hour.segments; trackBy:trackByHourSegment\"\n                [style.height.px]=\"hourSegmentHeight\"\n                [segment]=\"segment\"\n                [segmentHeight]=\"hourSegmentHeight\"\n                [locale]=\"locale\"\n                [customTemplate]=\"hourSegmentTemplate\"\n                (mwlClick)=\"hourSegmentClicked.emit({date: segment.date})\"\n                mwlDroppable\n                [dragOverClass]=\"!dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\"\n                dragActiveClass=\"cal-drag-active\"\n                (drop)=\"eventDropped($event, segment.date, false)\">\n              </mwl-calendar-week-view-hour-segment>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarWeekViewComponent implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input()\n  viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input()\n  events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input()\n  excludeDays: number[] = [];\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input()\n  refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input()\n  locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input()\n  tooltipPlacement: PlacementArray = 'auto';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input()\n  tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input()\n  tooltipAppendToBody: boolean = true;\n\n  /**\n   * The start number of the week\n   */\n  @Input()\n  weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input()\n  headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for week view events\n   */\n  @Input()\n  eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input()\n  eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event actions\n   */\n  @Input()\n  eventActionsTemplate: TemplateRef<any>;\n\n  /**\n   * The precision to display events.\n   * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n   */\n  @Input()\n  precision: 'days' | 'minutes' = 'days';\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input()\n  weekendDays: number[];\n\n  /**\n   * Whether to snap events to a grid when dragging\n   */\n  @Input()\n  snapDraggedEvents: boolean = true;\n\n  /**\n   * The number of segments in an hour. Must be <= 6\n   */\n  @Input()\n  hourSegments: number = 2;\n\n  /**\n   * The height in pixels of each hour segment\n   */\n  @Input()\n  hourSegmentHeight: number = 30;\n\n  /**\n   * The day start hours in 24 hour time. Must be 0-23\n   */\n  @Input()\n  dayStartHour: number = 0;\n\n  /**\n   * The day start minutes. Must be 0-59\n   */\n  @Input()\n  dayStartMinute: number = 0;\n\n  /**\n   * The day end hours in 24 hour time. Must be 0-23\n   */\n  @Input()\n  dayEndHour: number = 23;\n\n  /**\n   * The day end minutes. Must be 0-59\n   */\n  @Input()\n  dayEndMinute: number = 59;\n\n  /**\n   * A custom template to use to replace the hour segment\n   */\n  @Input()\n  hourSegmentTemplate: TemplateRef<any>;\n\n  /**\n   * The grid size to snap resizing and dragging of hourly events to\n   */\n  @Input()\n  eventSnapSize: number;\n\n  /**\n   * A custom template to use for the all day events label text\n   */\n  @Input()\n  allDayEventsLabelTemplate: TemplateRef<any>;\n\n  /**\n   * The number of days in a week. Can be used to create a shorter or longer week view.\n   * The first day of the week will always be the `viewDate`\n   */\n  @Input()\n  daysInWeek: number;\n\n  /**\n   * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\n   */\n  @Output()\n  dayHeaderClicked = new EventEmitter<{\n    day: WeekDay;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * An output that will be called before the view is rendered for the current week.\n   * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarWeekViewBeforeRenderEvent>();\n\n  /**\n   * Called when an hour segment is clicked\n   */\n  @Output()\n  hourSegmentClicked = new EventEmitter<{\n    date: Date;\n  }>();\n\n  /**\n   * @hidden\n   */\n  days: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: WeekView;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  allDayEventResizes: Map<\n    WeekViewAllDayEvent,\n    WeekViewAllDayEventResize\n  > = new Map();\n\n  /**\n   * @hidden\n   */\n  timeEventResizes: Map<CalendarEvent, ResizeEvent> = new Map();\n\n  /**\n   * @hidden\n   */\n  eventDragEnter = 0;\n\n  /**\n   * @hidden\n   */\n  dragActive = false;\n\n  /**\n   * @hidden\n   */\n  validateDrag: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  validateResize: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  dayColumnWidth: number;\n\n  /**\n   * @hidden\n   */\n  calendarId = Symbol('angular calendar week view id');\n\n  /**\n   * @hidden\n   */\n  trackByIndex = trackByIndex;\n\n  /**\n   * @hidden\n   */\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n\n  /**\n   * @hidden\n   */\n  trackByHourSegment = trackByHourSegment;\n\n  /**\n   * @hidden\n   */\n  trackByHour = trackByHour;\n\n  /**\n   * @hidden\n   */\n  trackByDayOrWeekEvent = trackByDayOrWeekEvent;\n\n  /**\n   * @hidden\n   */\n  trackByHourColumn = (index: number, column: WeekViewHourColumn) =>\n    column.hours[0] ? column.hours[0].segments[0].date.toISOString() : column;\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string,\n    private dateAdapter: DateAdapter\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (\n      changes.viewDate ||\n      changes.excludeDays ||\n      changes.weekendDays ||\n      changes.daysInWeek\n    ) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (\n      changes.viewDate ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.hourSegments ||\n      changes.weekStartsOn ||\n      changes.weekendDays ||\n      changes.excludeDays ||\n      changes.hourSegmentHeight ||\n      changes.events ||\n      changes.daysInWeek\n    ) {\n      this.refreshBody();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  private resizeStarted(eventsContainer: HTMLElement, minWidth?: number) {\n    this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);\n    const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(\n      eventsContainer,\n      minWidth\n    );\n    this.validateResize = ({ rectangle }) =>\n      resizeHelper.validateResize({ rectangle });\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * @hidden\n   */\n  timeEventResizeStarted(\n    eventsContainer: HTMLElement,\n    timeEvent: DayViewEvent,\n    resizeEvent: ResizeEvent\n  ): void {\n    this.timeEventResizes.set(timeEvent.event, resizeEvent);\n    this.resizeStarted(eventsContainer);\n  }\n\n  /**\n   * @hidden\n   */\n  timeEventResizing(timeEvent: DayViewEvent, resizeEvent: ResizeEvent) {\n    this.timeEventResizes.set(timeEvent.event, resizeEvent);\n    const adjustedEvents = new Map<CalendarEvent, CalendarEvent>();\n\n    const tempEvents = [...this.events];\n\n    this.timeEventResizes.forEach((lastResizeEvent, event) => {\n      const newEventDates = this.getTimeEventResizedDates(\n        event,\n        lastResizeEvent\n      );\n      const adjustedEvent = { ...event, ...newEventDates };\n      adjustedEvents.set(adjustedEvent, event);\n      const eventIndex = tempEvents.indexOf(event);\n      tempEvents[eventIndex] = adjustedEvent;\n    });\n\n    this.restoreOriginalEvents(tempEvents, adjustedEvents);\n  }\n\n  /**\n   * @hidden\n   */\n  timeEventResizeEnded(timeEvent: DayViewEvent) {\n    this.view = this.getWeekView(this.events);\n    const lastResizeEvent = this.timeEventResizes.get(timeEvent.event);\n    this.timeEventResizes.delete(timeEvent.event);\n    const newEventDates = this.getTimeEventResizedDates(\n      timeEvent.event,\n      lastResizeEvent\n    );\n    this.eventTimesChanged.emit({\n      newStart: newEventDates.start,\n      newEnd: newEventDates.end,\n      event: timeEvent.event,\n      type: CalendarEventTimesChangedEventType.Resize\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventResizeStarted(\n    allDayEventsContainer: HTMLElement,\n    allDayEvent: WeekViewAllDayEvent,\n    resizeEvent: ResizeEvent\n  ): void {\n    this.allDayEventResizes.set(allDayEvent, {\n      originalOffset: allDayEvent.offset,\n      originalSpan: allDayEvent.span,\n      edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right'\n    });\n    this.resizeStarted(\n      allDayEventsContainer,\n      this.getDayColumnWidth(allDayEventsContainer)\n    );\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventResizing(\n    allDayEvent: WeekViewAllDayEvent,\n    resizeEvent: ResizeEvent,\n    dayWidth: number\n  ): void {\n    const currentResize: WeekViewAllDayEventResize = this.allDayEventResizes.get(\n      allDayEvent\n    );\n\n    if (resizeEvent.edges.left) {\n      const diff: number = Math.round(+resizeEvent.edges.left / dayWidth);\n      allDayEvent.offset = currentResize.originalOffset + diff;\n      allDayEvent.span = currentResize.originalSpan - diff;\n    } else if (resizeEvent.edges.right) {\n      const diff: number = Math.round(+resizeEvent.edges.right / dayWidth);\n      allDayEvent.span = currentResize.originalSpan + diff;\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventResizeEnded(allDayEvent: WeekViewAllDayEvent): void {\n    const currentResize: WeekViewAllDayEventResize = this.allDayEventResizes.get(\n      allDayEvent\n    );\n\n    const allDayEventResizingBeforeStart = currentResize.edge === 'left';\n    let daysDiff: number;\n    if (allDayEventResizingBeforeStart) {\n      daysDiff = allDayEvent.offset - currentResize.originalOffset;\n    } else {\n      daysDiff = allDayEvent.span - currentResize.originalSpan;\n    }\n\n    allDayEvent.offset = currentResize.originalOffset;\n    allDayEvent.span = currentResize.originalSpan;\n\n    let newStart: Date = allDayEvent.event.start;\n    let newEnd: Date = allDayEvent.event.end || allDayEvent.event.start;\n    if (allDayEventResizingBeforeStart) {\n      newStart = this.dateAdapter.addDays(newStart, daysDiff);\n    } else {\n      newEnd = this.dateAdapter.addDays(newEnd, daysDiff);\n    }\n\n    this.eventTimesChanged.emit({\n      newStart,\n      newEnd,\n      event: allDayEvent.event,\n      type: CalendarEventTimesChangedEventType.Resize\n    });\n    this.allDayEventResizes.delete(allDayEvent);\n  }\n\n  /**\n   * @hidden\n   */\n  getDayColumnWidth(eventRowContainer: HTMLElement): number {\n    return Math.floor(eventRowContainer.offsetWidth / this.days.length);\n  }\n\n  /**\n   * @hidden\n   */\n  eventDropped(\n    dropEvent: DropEvent<{ event?: CalendarEvent; calendarId?: symbol }>,\n    date: Date,\n    allDay: boolean\n  ): void {\n    if (shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId)) {\n      this.eventTimesChanged.emit({\n        type: CalendarEventTimesChangedEventType.Drop,\n        event: dropEvent.dropData.event,\n        newStart: date,\n        allDay\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  dragStarted(\n    eventsContainer: HTMLElement,\n    event: HTMLElement,\n    dayEvent?: DayViewEvent\n  ): void {\n    this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n      eventsContainer,\n      event\n    );\n    this.validateDrag = ({ x, y }) =>\n      this.allDayEventResizes.size === 0 &&\n      this.timeEventResizes.size === 0 &&\n      dragHelper.validateDrag({\n        x,\n        y,\n        snapDraggedEvents: this.snapDraggedEvents\n      });\n    this.dragActive = true;\n    this.eventDragEnter = 0;\n    if (!this.snapDraggedEvents && dayEvent) {\n      this.view.hourColumns.forEach(column => {\n        const linkedEvent = column.events.find(\n          columnEvent =>\n            columnEvent.event === dayEvent.event && columnEvent !== dayEvent\n        );\n        // hide any linked events while dragging\n        if (linkedEvent) {\n          linkedEvent.width = 0;\n          linkedEvent.height = 0;\n        }\n      });\n    }\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * @hidden\n   */\n  dragMove(dayEvent: DayViewEvent, dragEvent: DragMoveEvent) {\n    if (this.snapDraggedEvents) {\n      const newEventTimes = this.getDragMovedEventTimes(\n        dayEvent,\n        dragEvent,\n        this.dayColumnWidth,\n        true\n      );\n      const originalEvent = dayEvent.event;\n      const adjustedEvent = { ...originalEvent, ...newEventTimes };\n      const tempEvents = this.events.map(event => {\n        if (event === originalEvent) {\n          return adjustedEvent;\n        }\n        return event;\n      });\n      this.restoreOriginalEvents(\n        tempEvents,\n        new Map([[adjustedEvent, originalEvent]])\n      );\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  dragEnded(\n    weekEvent: WeekViewAllDayEvent | DayViewEvent,\n    dragEndEvent: DragEndEvent,\n    dayWidth: number,\n    useY = false\n  ): void {\n    this.view = this.getWeekView(this.events);\n    this.dragActive = false;\n    const { start, end } = this.getDragMovedEventTimes(\n      weekEvent,\n      dragEndEvent,\n      dayWidth,\n      useY\n    );\n    if (\n      this.eventDragEnter > 0 &&\n      isDraggedWithinPeriod(start, end, this.view.period)\n    ) {\n      this.eventTimesChanged.emit({\n        newStart: start,\n        newEnd: end,\n        event: weekEvent.event,\n        type: CalendarEventTimesChangedEventType.Drag,\n        allDay: !useY\n      });\n    }\n  }\n\n  private refreshHeader(): void {\n    this.days = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays,\n      ...getWeekViewPeriod(\n        this.dateAdapter,\n        this.viewDate,\n        this.weekStartsOn,\n        this.excludeDays,\n        this.daysInWeek\n      )\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshBody(): void {\n    this.view = this.getWeekView(this.events);\n    this.emitBeforeViewRender();\n  }\n\n  private refreshAll(): void {\n    this.refreshHeader();\n    this.refreshBody();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.days && this.view) {\n      this.beforeViewRender.emit({\n        header: this.days,\n        ...this.view\n      });\n    }\n  }\n\n  private getWeekView(events: CalendarEvent[]) {\n    return this.utils.getWeekView({\n      events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      precision: this.precision,\n      absolutePositionedEvents: true,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute\n      },\n      segmentHeight: this.hourSegmentHeight,\n      weekendDays: this.weekendDays,\n      ...getWeekViewPeriod(\n        this.dateAdapter,\n        this.viewDate,\n        this.weekStartsOn,\n        this.excludeDays,\n        this.daysInWeek\n      )\n    });\n  }\n\n  private getDragMovedEventTimes(\n    weekEvent: WeekViewAllDayEvent | DayViewEvent,\n    dragEndEvent: DragEndEvent | DragMoveEvent,\n    dayWidth: number,\n    useY: boolean\n  ) {\n    const daysDragged = roundToNearest(dragEndEvent.x, dayWidth) / dayWidth;\n    const minutesMoved = useY\n      ? getMinutesMoved(\n          dragEndEvent.y,\n          this.hourSegments,\n          this.hourSegmentHeight,\n          this.eventSnapSize\n        )\n      : 0;\n\n    const start = this.dateAdapter.addMinutes(\n      this.dateAdapter.addDays(weekEvent.event.start, daysDragged),\n      minutesMoved\n    );\n    let end: Date;\n    if (weekEvent.event.end) {\n      end = this.dateAdapter.addMinutes(\n        this.dateAdapter.addDays(weekEvent.event.end, daysDragged),\n        minutesMoved\n      );\n    }\n\n    return { start, end };\n  }\n\n  private restoreOriginalEvents(\n    tempEvents: CalendarEvent[],\n    adjustedEvents: Map<CalendarEvent, CalendarEvent>\n  ) {\n    this.view = this.getWeekView(tempEvents);\n    const adjustedEventsArray = tempEvents.filter(event =>\n      adjustedEvents.has(event)\n    );\n    this.view.hourColumns.forEach(column => {\n      adjustedEventsArray.forEach(adjustedEvent => {\n        const originalEvent = adjustedEvents.get(adjustedEvent);\n        const existingColumnEvent = column.events.find(\n          columnEvent => columnEvent.event === adjustedEvent\n        );\n        if (existingColumnEvent) {\n          // restore the original event so trackBy kicks in and the dom isn't changed\n          existingColumnEvent.event = originalEvent;\n        } else {\n          // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early\n          column.events.push({\n            event: originalEvent,\n            left: 0,\n            top: 0,\n            height: 0,\n            width: 0,\n            startsBeforeDay: false,\n            endsAfterDay: false\n          });\n        }\n      });\n    });\n    adjustedEvents.clear();\n  }\n\n  private getTimeEventResizedDates(\n    calendarEvent: CalendarEvent,\n    resizeEvent: ResizeEvent\n  ) {\n    const minimumEventHeight = getMinimumEventHeightInMinutes(\n      this.hourSegments,\n      this.hourSegmentHeight\n    );\n    const newEventDates = {\n      start: calendarEvent.start,\n      end: getDefaultEventEnd(\n        this.dateAdapter,\n        calendarEvent,\n        minimumEventHeight\n      )\n    };\n    const { end, ...eventWithoutEnd } = calendarEvent;\n    const smallestResizes = {\n      start: this.dateAdapter.addMinutes(\n        newEventDates.end,\n        minimumEventHeight * -1\n      ),\n      end: getDefaultEventEnd(\n        this.dateAdapter,\n        eventWithoutEnd,\n        minimumEventHeight\n      )\n    };\n\n    if (resizeEvent.edges.left) {\n      const daysDiff = Math.round(\n        +resizeEvent.edges.left / this.dayColumnWidth\n      );\n      const newStart = this.dateAdapter.addDays(newEventDates.start, daysDiff);\n      if (newStart < smallestResizes.start) {\n        newEventDates.start = newStart;\n      } else {\n        newEventDates.start = smallestResizes.start;\n      }\n    } else if (resizeEvent.edges.right) {\n      const daysDiff = Math.round(\n        +resizeEvent.edges.right / this.dayColumnWidth\n      );\n      const newEnd = this.dateAdapter.addDays(newEventDates.end, daysDiff);\n      if (newEnd > smallestResizes.end) {\n        newEventDates.end = newEnd;\n      } else {\n        newEventDates.end = smallestResizes.end;\n      }\n    }\n\n    if (resizeEvent.edges.top) {\n      const minutesMoved = getMinutesMoved(\n        resizeEvent.edges.top as number,\n        this.hourSegments,\n        this.hourSegmentHeight,\n        this.eventSnapSize\n      );\n      const newStart = this.dateAdapter.addMinutes(\n        newEventDates.start,\n        minutesMoved\n      );\n      if (newStart < smallestResizes.start) {\n        newEventDates.start = newStart;\n      } else {\n        newEventDates.start = smallestResizes.start;\n      }\n    } else if (resizeEvent.edges.bottom) {\n      const minutesMoved = getMinutesMoved(\n        resizeEvent.edges.bottom as number,\n        this.hourSegments,\n        this.hourSegmentHeight,\n        this.eventSnapSize\n      );\n      const newEnd = this.dateAdapter.addMinutes(\n        newEventDates.end,\n        minutesMoved\n      );\n      if (newEnd > smallestResizes.end) {\n        newEventDates.end = newEnd;\n      } else {\n        newEventDates.end = smallestResizes.end;\n      }\n    }\n\n    return newEventDates;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { CalendarEvent, WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-week-view-header',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\"\n      let-dayHeaderClicked=\"dayHeaderClicked\"\n      let-eventDropped=\"eventDropped\">\n      <div class=\"cal-day-headers\">\n        <div\n          class=\"cal-header\"\n          *ngFor=\"let day of days; trackBy:trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [ngClass]=\"day.cssClass\"\n          (mwlClick)=\"dayHeaderClicked.emit({day: day})\"\n          mwlDroppable\n          dragOverClass=\"cal-drag-over\"\n          (drop)=\"eventDropped.emit({event: $event.dropData.event, newStart: day.date})\">\n          <b>{{ day.date | calendarDate:'weekViewColumnHeader':locale }}</b><br>\n          <span>{{ day.date | calendarDate:'weekViewColumnSubHeader':locale }}</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{days: days, locale: locale, dayHeaderClicked: dayHeaderClicked, eventDropped: eventDropped}\">\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewHeaderComponent {\n  @Input()\n  days: WeekDay[];\n\n  @Input()\n  locale: string;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  @Output()\n  dayHeaderClicked: EventEmitter<{ day: WeekDay }> = new EventEmitter<{\n    day: WeekDay;\n  }>();\n\n  @Output()\n  eventDropped: EventEmitter<{\n    event: CalendarEvent;\n    newStart: Date;\n  }> = new EventEmitter<{ event: CalendarEvent; newStart: Date }>();\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { WeekViewAllDayEvent, DayViewEvent } from 'calendar-utils';\nimport { PlacementArray } from 'positioning';\n\n@Component({\n  selector: 'mwl-calendar-week-view-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-weekEvent=\"weekEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\n      let-tooltipDisabled=\"tooltipDisabled\">\n      <div\n        class=\"cal-event\"\n        [style.backgroundColor]=\"weekEvent.event.color?.secondary\"\n        [style.borderColor]=\"weekEvent.event.color?.primary\"\n        [mwlCalendarTooltip]=\"!tooltipDisabled ? (weekEvent.event.title | calendarEventTitle:'weekTooltip':weekEvent.event) : ''\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"weekEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\n        (mwlClick)=\"eventClicked.emit()\">\n        <mwl-calendar-event-actions\n          [event]=\"weekEvent.event\"\n          [customTemplate]=\"eventActionsTemplate\">\n        </mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"weekEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"week\">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        weekEvent: weekEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody,\n        tooltipDisabled: tooltipDisabled\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewEventComponent {\n  @Input()\n  weekEvent: WeekViewAllDayEvent | DayViewEvent;\n\n  @Input()\n  tooltipPlacement: PlacementArray;\n\n  @Input()\n  tooltipAppendToBody: boolean;\n\n  @Input()\n  tooltipDisabled: boolean;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  @Input()\n  eventTitleTemplate: TemplateRef<any>;\n\n  @Input()\n  eventActionsTemplate: TemplateRef<any>;\n\n  @Input()\n  tooltipTemplate: TemplateRef<any>;\n\n  @Output()\n  eventClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { WeekViewHourColumn } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-week-view-hour-segment',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-segment=\"segment\"\n      let-locale=\"locale\"\n      let-segmentHeight=\"segmentHeight\"\n      let-isTimeLabel=\"isTimeLabel\">\n      <div\n        class=\"cal-hour-segment\"\n        [style.height.px]=\"segmentHeight\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\">\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\n          {{ segment.date | calendarDate:'weekViewHour':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale,\n        segmentHeight: segmentHeight,\n        isTimeLabel: isTimeLabel\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewHourSegmentComponent {\n  @Input()\n  segment: WeekViewHourColumn;\n\n  @Input()\n  segmentHeight: number;\n\n  @Input()\n  locale: string;\n\n  @Input()\n  isTimeLabel: boolean;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarWeekViewComponent } from './calendar-week-view.component';\nimport { CalendarWeekViewHeaderComponent } from './calendar-week-view-header.component';\nimport { CalendarWeekViewEventComponent } from './calendar-week-view-event.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\nimport { CalendarWeekViewHourSegmentComponent } from './calendar-week-view-hour-segment.component';\n\nexport {\n  CalendarWeekViewComponent,\n  CalendarWeekViewBeforeRenderEvent\n} from './calendar-week-view.component';\nexport {\n  WeekViewAllDayEvent as CalendarWeekViewAllDayEvent,\n  WeekViewAllDayEventRow as CalendarWeekViewAllDayEventRow,\n  GetWeekViewArgs as CalendarGetWeekViewArgs\n} from 'calendar-utils';\nexport { getWeekViewPeriod } from '../common/util';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ResizableModule,\n    DragAndDropModule,\n    CalendarCommonModule\n  ],\n  declarations: [\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent,\n    CalendarWeekViewHourSegmentComponent\n  ],\n  exports: [\n    ResizableModule,\n    DragAndDropModule,\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent,\n    CalendarWeekViewHourSegmentComponent\n  ]\n})\nexport class CalendarWeekModule {}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  LOCALE_ID,\n  Inject,\n  OnInit,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  DayView,\n  DayViewHour,\n  DayViewHourSegment,\n  DayViewEvent,\n  ViewPeriod,\n  WeekViewAllDayEvent\n} from 'calendar-utils';\nimport { Subject, Subscription } from 'rxjs';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport { CalendarDragHelper } from '../common/calendar-drag-helper.provider';\nimport { CalendarResizeHelper } from '../common/calendar-resize-helper.provider';\nimport {\n  CalendarEventTimesChangedEvent,\n  CalendarEventTimesChangedEventType\n} from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport {\n  validateEvents,\n  trackByEventId,\n  trackByHour,\n  trackByHourSegment,\n  getMinutesMoved,\n  getDefaultEventEnd,\n  getMinimumEventHeightInMinutes,\n  trackByDayOrWeekEvent,\n  isDraggedWithinPeriod,\n  shouldFireDroppedEvent\n} from '../common/util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { DragEndEvent } from 'angular-draggable-droppable';\nimport { PlacementArray } from 'positioning';\n\nexport interface CalendarDayViewBeforeRenderEvent {\n  body: {\n    hourGrid: DayViewHour[];\n    allDayEvents: CalendarEvent[];\n  };\n  period: ViewPeriod;\n}\n\n/**\n * @hidden\n */\nexport interface DayViewEventResize {\n  originalTop: number;\n  originalHeight: number;\n  edge: string;\n}\n\n/**\n * Shows all events on a given day. Example usage:\n *\n * ```typescript\n * <mwl-calendar-day-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-day-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-day-view',\n  template: `\n    <div class=\"cal-day-view\">\n      <div\n        class=\"cal-all-day-events\"\n        mwlDroppable\n        dragOverClass=\"cal-drag-over\"\n        dragActiveClass=\"cal-drag-active\"\n        (drop)=\"eventDropped($event, view.period.start, true)\">\n        <mwl-calendar-day-view-event\n          *ngFor=\"let event of view.allDayEvents; trackBy:trackByEventId\"\n          [dayEvent]=\"{event: event}\"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\n          [customTemplate]=\"eventTemplate\"\n          [eventTitleTemplate]=\"eventTitleTemplate\"\n          [eventActionsTemplate]=\"eventActionsTemplate\"\n          (eventClicked)=\"eventClicked.emit({event: event})\"\n          [class.cal-draggable]=\"!snapDraggedEvents && event.draggable\"\n          mwlDraggable\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{event: event, calendarId: calendarId}\"\n          [dragAxis]=\"{x: !snapDraggedEvents && event.draggable, y: !snapDraggedEvents && event.draggable}\">\n        </mwl-calendar-day-view-event>\n      </div>\n      <div\n        class=\"cal-hour-rows\"\n        #dayEventsContainer\n        mwlDroppable\n        (dragEnter)=\"eventDragEnter = eventDragEnter + 1\"\n        (dragLeave)=\"eventDragEnter = eventDragEnter - 1\">\n        <div class=\"cal-events\">\n          <div\n            #event\n            *ngFor=\"let dayEvent of view?.events; trackBy:trackByDayEvent\"\n            class=\"cal-event-container\"\n            [class.cal-draggable]=\"dayEvent.event.draggable\"\n            [class.cal-starts-within-day]=\"!dayEvent.startsBeforeDay\"\n            [class.cal-ends-within-day]=\"!dayEvent.endsAfterDay\"\n            [ngClass]=\"dayEvent.event.cssClass\"\n            mwlResizable\n            [resizeSnapGrid]=\"{top: eventSnapSize || hourSegmentHeight, bottom: eventSnapSize || hourSegmentHeight}\"\n            [validateResize]=\"validateResize\"\n            (resizeStart)=\"resizeStarted(dayEvent, $event, dayEventsContainer)\"\n            (resizing)=\"resizing(dayEvent, $event)\"\n            (resizeEnd)=\"resizeEnded(dayEvent)\"\n            mwlDraggable\n            dragActiveClass=\"cal-drag-active\"\n            [dropData]=\"{event: dayEvent.event, calendarId: calendarId}\"\n            [dragAxis]=\"{x: !snapDraggedEvents && dayEvent.event.draggable && currentResizes.size === 0, y: dayEvent.event.draggable && currentResizes.size === 0}\"\n            [dragSnapGrid]=\"snapDraggedEvents ? {y: eventSnapSize || hourSegmentHeight} : {}\"\n            [validateDrag]=\"validateDrag\"\n            (dragPointerDown)=\"dragStarted(event, dayEventsContainer)\"\n            (dragEnd)=\"dragEnded(dayEvent, $event)\"\n            [style.marginTop.px]=\"dayEvent.top\"\n            [style.height.px]=\"dayEvent.height\"\n            [style.marginLeft.px]=\"dayEvent.left + 70\"\n            [style.width.px]=\"dayEvent.width - 1\">\n            <div\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\n              *ngIf=\"dayEvent.event?.resizable?.beforeStart && !dayEvent.startsBeforeDay\"\n              mwlResizeHandle\n              [resizeEdges]=\"{ top: true }\">\n            </div>\n            <mwl-calendar-day-view-event\n              [dayEvent]=\"dayEvent\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [customTemplate]=\"eventTemplate\"\n              [eventTitleTemplate]=\"eventTitleTemplate\"\n              [eventActionsTemplate]=\"eventActionsTemplate\"\n              (eventClicked)=\"eventClicked.emit({event: dayEvent.event})\">\n            </mwl-calendar-day-view-event>\n            <div\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\n              *ngIf=\"dayEvent.event?.resizable?.afterEnd && !dayEvent.endsAfterDay\"\n              mwlResizeHandle\n              [resizeEdges]=\"{ bottom: true }\">\n            </div>\n          </div>\n        </div>\n        <div class=\"cal-hour\" *ngFor=\"let hour of hours; trackBy:trackByHour\" [style.minWidth.px]=\"view?.width + 70\">\n          <mwl-calendar-day-view-hour-segment\n            *ngFor=\"let segment of hour.segments; trackBy:trackByHourSegment\"\n            [style.height.px]=\"hourSegmentHeight\"\n            [segment]=\"segment\"\n            [segmentHeight]=\"hourSegmentHeight\"\n            [locale]=\"locale\"\n            [customTemplate]=\"hourSegmentTemplate\"\n            (mwlClick)=\"hourSegmentClicked.emit({date: segment.date})\"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            dragActiveClass=\"cal-drag-active\"\n            (drop)=\"eventDropped($event, segment.date, false)\">\n          </mwl-calendar-day-view-hour-segment>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarDayViewComponent implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input()\n  viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input()\n  events: CalendarEvent[] = [];\n\n  /**\n   * The number of segments in an hour. Must be <= 6\n   */\n  @Input()\n  hourSegments: number = 2;\n\n  /**\n   * The height in pixels of each hour segment\n   */\n  @Input()\n  hourSegmentHeight: number = 30;\n\n  /**\n   * The day start hours in 24 hour time. Must be 0-23\n   */\n  @Input()\n  dayStartHour: number = 0;\n\n  /**\n   * The day start minutes. Must be 0-59\n   */\n  @Input()\n  dayStartMinute: number = 0;\n\n  /**\n   * The day end hours in 24 hour time. Must be 0-23\n   */\n  @Input()\n  dayEndHour: number = 23;\n\n  /**\n   * The day end minutes. Must be 0-59\n   */\n  @Input()\n  dayEndMinute: number = 59;\n\n  /**\n   * The width in pixels of each event on the view\n   */\n  @Input()\n  eventWidth: number = 150;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input()\n  refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input()\n  locale: string;\n\n  /**\n   * The grid size to snap resizing and dragging of events to\n   */\n  @Input()\n  eventSnapSize: number;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input()\n  tooltipPlacement: PlacementArray = 'auto';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input()\n  tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input()\n  tooltipAppendToBody: boolean = true;\n\n  /**\n   * A custom template to use to replace the hour segment\n   */\n  @Input()\n  hourSegmentTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for day view events\n   */\n  @Input()\n  eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input()\n  eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event actions\n   */\n  @Input()\n  eventActionsTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to snap events to a grid when dragging\n   */\n  @Input()\n  snapDraggedEvents: boolean = true;\n\n  /**\n   * Called when an event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an hour segment is clicked\n   */\n  @Output()\n  hourSegmentClicked = new EventEmitter<{\n    date: Date;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * An output that will be called before the view is rendered for the current day.\n   * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarDayViewBeforeRenderEvent>();\n\n  /**\n   * @hidden\n   */\n  hours: DayViewHour[] = [];\n\n  /**\n   * @hidden\n   */\n  view: DayView;\n\n  /**\n   * @hidden\n   */\n  width: number = 0;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  currentResizes: Map<DayViewEvent, DayViewEventResize> = new Map();\n\n  /**\n   * @hidden\n   */\n  eventDragEnter = 0;\n\n  /**\n   * @hidden\n   */\n  calendarId = Symbol('angular calendar day view id');\n\n  /**\n   * @hidden\n   */\n  validateDrag: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  validateResize: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  trackByEventId = trackByEventId;\n\n  /**\n   * @hidden\n   */\n  trackByHour = trackByHour;\n\n  /**\n   * @hidden\n   */\n  trackByHourSegment = trackByHourSegment;\n\n  /**\n   * @hidden\n   */\n  trackByDayEvent = trackByDayOrWeekEvent;\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string,\n    private dateAdapter: DateAdapter\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (\n      changes.viewDate ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.hourSegments\n    ) {\n      this.refreshHourGrid();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (\n      changes.viewDate ||\n      changes.events ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.eventWidth\n    ) {\n      this.refreshView();\n    }\n  }\n\n  eventDropped(\n    dropEvent: { dropData?: { event?: CalendarEvent; calendarId?: symbol } },\n    date: Date,\n    allDay: boolean\n  ): void {\n    if (shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId)) {\n      this.eventTimesChanged.emit({\n        type: CalendarEventTimesChangedEventType.Drop,\n        event: dropEvent.dropData.event,\n        newStart: date,\n        allDay\n      });\n    }\n  }\n\n  resizeStarted(\n    event: DayViewEvent,\n    resizeEvent: ResizeEvent,\n    dayEventsContainer: HTMLElement\n  ): void {\n    this.currentResizes.set(event, {\n      originalTop: event.top,\n      originalHeight: event.height,\n      edge: typeof resizeEvent.edges.top !== 'undefined' ? 'top' : 'bottom'\n    });\n    const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(\n      dayEventsContainer\n    );\n    this.validateResize = ({ rectangle }) =>\n      resizeHelper.validateResize({ rectangle });\n    this.cdr.markForCheck();\n  }\n\n  resizing(event: DayViewEvent, resizeEvent: ResizeEvent): void {\n    const currentResize: DayViewEventResize = this.currentResizes.get(event);\n    if (resizeEvent.edges.top) {\n      event.top = currentResize.originalTop + +resizeEvent.edges.top;\n      event.height = currentResize.originalHeight - +resizeEvent.edges.top;\n    } else if (resizeEvent.edges.bottom) {\n      event.height = currentResize.originalHeight + +resizeEvent.edges.bottom;\n    }\n  }\n\n  resizeEnded(dayEvent: DayViewEvent): void {\n    const currentResize: DayViewEventResize = this.currentResizes.get(dayEvent);\n\n    const resizingBeforeStart = currentResize.edge === 'top';\n    let pixelsMoved: number;\n    if (resizingBeforeStart) {\n      pixelsMoved = dayEvent.top - currentResize.originalTop;\n    } else {\n      pixelsMoved = dayEvent.height - currentResize.originalHeight;\n    }\n\n    dayEvent.top = currentResize.originalTop;\n    dayEvent.height = currentResize.originalHeight;\n\n    const minutesMoved = getMinutesMoved(\n      pixelsMoved,\n      this.hourSegments,\n      this.hourSegmentHeight,\n      this.eventSnapSize\n    );\n\n    let newStart: Date = dayEvent.event.start;\n    let newEnd: Date = getDefaultEventEnd(\n      this.dateAdapter,\n      dayEvent.event,\n      getMinimumEventHeightInMinutes(this.hourSegments, this.hourSegmentHeight)\n    );\n    if (resizingBeforeStart) {\n      newStart = this.dateAdapter.addMinutes(newStart, minutesMoved);\n    } else {\n      newEnd = this.dateAdapter.addMinutes(newEnd, minutesMoved);\n    }\n\n    this.eventTimesChanged.emit({\n      newStart,\n      newEnd,\n      event: dayEvent.event,\n      type: CalendarEventTimesChangedEventType.Resize\n    });\n    this.currentResizes.delete(dayEvent);\n  }\n\n  dragStarted(event: HTMLElement, dayEventsContainer: HTMLElement): void {\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n      dayEventsContainer,\n      event\n    );\n    this.validateDrag = ({ x, y }) =>\n      this.currentResizes.size === 0 &&\n      dragHelper.validateDrag({\n        x,\n        y,\n        snapDraggedEvents: this.snapDraggedEvents\n      });\n    this.eventDragEnter = 0;\n    this.cdr.markForCheck();\n  }\n\n  dragEnded(dayEvent: DayViewEvent, dragEndEvent: DragEndEvent): void {\n    if (this.eventDragEnter > 0) {\n      let minutesMoved = getMinutesMoved(\n        dragEndEvent.y,\n        this.hourSegments,\n        this.hourSegmentHeight,\n        this.eventSnapSize\n      );\n      let newStart: Date = this.dateAdapter.addMinutes(\n        dayEvent.event.start,\n        minutesMoved\n      );\n      if (dragEndEvent.y < 0 && newStart < this.view.period.start) {\n        minutesMoved += this.dateAdapter.differenceInMinutes(\n          this.view.period.start,\n          newStart\n        );\n        newStart = this.view.period.start;\n      }\n      let newEnd: Date;\n      if (dayEvent.event.end) {\n        newEnd = this.dateAdapter.addMinutes(dayEvent.event.end, minutesMoved);\n      }\n      if (isDraggedWithinPeriod(newStart, newEnd, this.view.period)) {\n        this.eventTimesChanged.emit({\n          newStart,\n          newEnd,\n          event: dayEvent.event,\n          type: CalendarEventTimesChangedEventType.Drag\n        });\n      }\n    }\n  }\n\n  private refreshHourGrid(): void {\n    this.hours = this.utils.getDayViewHourGrid({\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute\n      }\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshView(): void {\n    this.view = this.utils.getDayView({\n      events: this.events,\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute\n      },\n      eventWidth: this.eventWidth,\n      segmentHeight: this.hourSegmentHeight\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshAll(): void {\n    this.refreshHourGrid();\n    this.refreshView();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.hours && this.view) {\n      this.beforeViewRender.emit({\n        body: {\n          hourGrid: this.hours,\n          allDayEvents: this.view.allDayEvents\n        },\n        period: this.view.period\n      });\n    }\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { DayViewHourSegment } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-day-view-hour-segment',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-segment=\"segment\"\n      let-locale=\"locale\"\n      let-segmentHeight=\"segmentHeight\">\n      <div\n        class=\"cal-hour-segment\"\n        [style.height.px]=\"segmentHeight\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\">\n        <div class=\"cal-time\">\n          {{ segment.date | calendarDate:'dayViewHour':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale,\n        segmentHeight: segmentHeight\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarDayViewHourSegmentComponent {\n  @Input()\n  segment: DayViewHourSegment;\n\n  @Input()\n  segmentHeight: number;\n\n  @Input()\n  locale: string;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { DayViewEvent } from 'calendar-utils';\nimport { PlacementArray } from 'positioning';\n\n@Component({\n  selector: 'mwl-calendar-day-view-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-dayEvent=\"dayEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\">\n      <div\n        class=\"cal-event\"\n        [style.backgroundColor]=\"dayEvent.event.color?.secondary\"\n        [style.borderColor]=\"dayEvent.event.color?.primary\"\n        [mwlCalendarTooltip]=\"dayEvent.event.title | calendarEventTitle:'dayTooltip':dayEvent.event\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"dayEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\n        (mwlClick)=\"eventClicked.emit()\">\n        <mwl-calendar-event-actions\n          [event]=\"dayEvent.event\"\n          [customTemplate]=\"eventActionsTemplate\">\n        </mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"dayEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"day\">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        dayEvent: dayEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarDayViewEventComponent {\n  @Input()\n  dayEvent: DayViewEvent;\n\n  @Input()\n  tooltipPlacement: PlacementArray;\n\n  @Input()\n  tooltipAppendToBody: boolean;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  @Input()\n  eventTitleTemplate: TemplateRef<any>;\n\n  @Input()\n  eventActionsTemplate: TemplateRef<any>;\n\n  @Input()\n  tooltipTemplate: TemplateRef<any>;\n\n  @Output()\n  eventClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarDayViewComponent } from './calendar-day-view.component';\nimport { CalendarDayViewHourSegmentComponent } from './calendar-day-view-hour-segment.component';\nimport { CalendarDayViewEventComponent } from './calendar-day-view-event.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarDayViewComponent,\n  CalendarDayViewBeforeRenderEvent\n} from './calendar-day-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ResizableModule,\n    DragAndDropModule,\n    CalendarCommonModule\n  ],\n  declarations: [\n    CalendarDayViewComponent,\n    CalendarDayViewHourSegmentComponent,\n    CalendarDayViewEventComponent\n  ],\n  exports: [\n    ResizableModule,\n    DragAndDropModule,\n    CalendarDayViewComponent,\n    CalendarDayViewHourSegmentComponent,\n    CalendarDayViewEventComponent\n  ]\n})\nexport class CalendarDayModule {}\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport {\n  CalendarCommonModule,\n  CalendarModuleConfig,\n  CalendarEventTitleFormatter,\n  CalendarDateFormatter\n} from './common/calendar-common.module';\nimport { CalendarMonthModule } from './month/calendar-month.module';\nimport { CalendarWeekModule } from './week/calendar-week.module';\nimport { CalendarDayModule } from './day/calendar-day.module';\nimport { CalendarUtils } from './common/calendar-utils.provider';\n\nexport * from './common/calendar-common.module';\nexport * from './month/calendar-month.module';\nexport * from './week/calendar-week.module';\nexport * from './day/calendar-day.module';\n\n/**\n * The main module of this library. Example usage:\n *\n * ```typescript\n * import { CalenderModule } from 'angular-calendar';\n *\n * @NgModule({\n *   imports: [\n *     CalenderModule.forRoot()\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  imports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule\n  ],\n  exports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule\n  ]\n})\nexport class CalendarModule {\n  static forRoot(\n    dateAdapter: Provider,\n    config: CalendarModuleConfig = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: CalendarModule,\n      providers: [\n        dateAdapter,\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\n        config.dateFormatter || CalendarDateFormatter,\n        config.utils || CalendarUtils\n      ]\n    };\n  }\n}\n"]}