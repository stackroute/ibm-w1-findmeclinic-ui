{"version":3,"sources":["../src/auto-complete.service.ts"],"names":[],"mappings":"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","file":"auto-complete.service.js","sourceRoot":"","sourcesContent":["import { Injectable, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { GlobalRef } from './windowRef.service';\nimport { Http } from '@angular/http';\nimport { LocalStorageService } from './storage.service';\nimport 'rxjs/Rx';\n\n\nexport class AutoCompleteSearchService {\n  constructor(private _http: Http,  private platformId: Object,\n  private _global: GlobalRef, private _localStorageService: LocalStorageService) {\n\n  }\n\n  getPredictions(url: string, query: string): Promise<any> {\n    return new Promise(resolve => {\n      this._http.get(url, {params: {query: query}})\n      .map(res => res.json())\n      .subscribe((data: any) => {\n        if (data) {\n          resolve(data);\n        }else {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n\n  getLatLngDetail(url: string, lat: number, lng: number): Promise<any> {\n    return new Promise(resolve => {\n      this._http.get(url, {params: {lat: lat, lng: lng}})\n      .map(res => res.json())\n      .subscribe((data: any) => {\n        if (data) {\n          resolve(data);\n        }else {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n\n  getPlaceDetails(url: string, placeId: string): Promise<any> {\n    return new Promise(resolve => {\n      this._http.get(url, {params: {query: placeId}})\n      .map(res => res.json())\n      .subscribe((data: any) => {\n        if (data) {\n          resolve(data);\n        }else {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n  getGeoCurrentLocation(): Promise<any> {\n    return new Promise(resolve => {\n      if (isPlatformBrowser(this.platformId)) {\n        let _window: any = this._global.nativeGlobal;\n        if (_window.navigator.geolocation) {\n          _window.navigator.geolocation.getCurrentPosition((pos) => {\n            let latlng: any = {lat: parseFloat(pos.coords.latitude + ''), lng: parseFloat(pos.coords.longitude + '')};\n            resolve(latlng);\n          }, (error) => {\n            resolve(false);\n          });\n        }else {\n          resolve(false);\n        }\n      }else {\n        resolve(false);\n      }\n    });\n  }\n\n  getGeoLatLngDetail(latlng: any): Promise<any> {\n    return new Promise(resolve => {\n      if (isPlatformBrowser(this.platformId)) {\n        let _window: any = this._global.nativeGlobal;\n        let geocoder: any = new _window.google.maps.Geocoder;\n        geocoder.geocode({'location': latlng}, (results, status) => {\n          if (status === 'OK') {\n            this.getGeoPlaceDetail(results[0].place_id).then((result) => {\n              if (result) {\n                resolve(result);\n              }else {\n                resolve(false);\n              }\n            });\n          } else {\n            resolve(false);\n          }\n        });\n      }else {\n        resolve(false);\n      }\n    });\n  }\n\n  getGeoPrediction(params: any): Promise<any> {\n    return new Promise(resolve => {\n      if (isPlatformBrowser(this.platformId)) {\n        let _window: any = this._global.nativeGlobal;\n        let placesService: any = new _window.google.maps.places.AutocompleteService();\n        let queryInput: any = {};\n        let promiseArr: any = [];\n        if (params.countryRestriction.length) {\n          queryInput = {\n            input: params.query,\n            componentRestrictions: {country: params.countryRestriction},\n          };\n        }else {\n           queryInput = {\n             input: params.query\n          };\n        }\n        if (params.geoLocation) {\n          queryInput.location = new _window.google.maps.LatLng(parseFloat( params.geoLocation[0] ), parseFloat( params.geoLocation[1] ));\n          queryInput.radius = params.radius;\n        }\n        if (params.geoTypes.length) {\n          for (let i: number = 0; i < params.geoTypes.length; i++) {\n              let _tempQuery: any = queryInput;\n              _tempQuery['types'] = new Array(params.geoTypes[i]);\n              promiseArr.push(this.geoPredictionCall(placesService, _tempQuery));\n          }\n        }else {\n          promiseArr.push(this.geoPredictionCall(placesService, queryInput));\n        }\n\n        Promise.all(promiseArr).then(values => {\n            let val: any = values;\n            if (val.length > 1) {\n              let _tempArr: any = [];\n              for (let j: number = 0; j < val.length; j++) {\n                  if (val[j] && val[j].length) {\n                      _tempArr = _tempArr.concat(val[j]);\n                  }\n              }\n              _tempArr = this.getUniqueResults(_tempArr);\n              resolve(_tempArr);\n            }else {\n              resolve(values[0]);\n            }\n        });\n      }else {\n        resolve(false);\n      }\n    });\n  }\n\n  getGeoPlaceDetail(placeId: string): Promise<any> {\n    return new Promise(resolve => {\n      if (isPlatformBrowser(this.platformId)) {\n        let _window: any = this._global.nativeGlobal;\n        let placesService: any = new _window.google.maps.places.PlacesService(document.createElement('div'));\n        placesService.getDetails({'placeId': placeId}, (result: any, status: any) => {\n          if (result == null || result.length === 0) {\n            this.getGeoPaceDetailByReferance(result.referance).then((referanceData: any) => {\n              if (!referanceData) {\n                resolve(false);\n              }else {\n                resolve(referanceData);\n              }\n            });\n          }else {\n            resolve(result);\n          }\n        });\n      }else {\n        resolve(false);\n      }\n    });\n  }\n\n  getGeoPaceDetailByReferance(referance: string): Promise<any> {\n    return new Promise(resolve => {\n      if (isPlatformBrowser(this.platformId)) {\n        let _window: any = this._global.nativeGlobal;\n        let placesService: any = new _window.google.maps.places.PlacesService();\n        placesService.getDetails({'reference': referance}, (result: any, status: any) => {\n          if (status === _window.google.maps.places.PlacesServiceStatus.OK) {\n            resolve(result);\n          }else {\n            resolve(false);\n          }\n        });\n      }else {\n        resolve(false);\n      }\n    });\n  }\n\n  addRecentList(localStorageName: string, result: any, itemSavedLength: number): any {\n    this.getRecentList(localStorageName).then((data: any) => {\n      if (data) {\n        for (let i: number = 0; i < data.length; i++) {\n          if (data[i].description === result.description) {\n            data.splice(i, 1);\n            break;\n          }\n        }\n        data.unshift(result);\n        if (data.length > itemSavedLength) {\n          data.pop();\n        }\n        this._localStorageService.setItem(localStorageName, JSON.stringify(data));\n      }\n    });\n  };\n\n\n  getRecentList(localStorageName: string): Promise<any> {\n    return new Promise(resolve => {\n      let value: any = this._localStorageService.getItem(localStorageName);\n      if (value) {\n        value = JSON.parse(value);\n      } else {\n        value = [];\n      }\n      resolve(value);\n    });\n  }\n\n  private getUniqueResults(arr: any): any {\n      return Array.from(arr.reduce((m, t) => m.set(t.place_id, t), new Map()).values());\n  }\n\n  private geoPredictionCall(placesService: any, queryInput: any): Promise<any> {\n    let _window: any = this._global.nativeGlobal;\n    return new Promise(resolve => {\n      placesService.getPlacePredictions(queryInput, (result: any, status: any) => {\n          if (status === _window.google.maps.places.PlacesServiceStatus.OK) {\n            resolve(result);\n          }else {\n            resolve(false);\n          }\n        });\n    });\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: GlobalRef, },\n{type: LocalStorageService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}